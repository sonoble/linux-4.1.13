igmpv3 reports/MLDv2 with include type with 0 sources should be treated as a leave.

diff --git a/net/bridge/br_multicast.c b/net/bridge/br_multicast.c
index 622c082..11f4a71 100644
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@ -41,7 +41,12 @@ static void br_multicast_start_querier(struct net_bridge *br);
 static void br_multicast_add_router(struct net_bridge *br,
 				struct net_bridge_port *port);
 static void br_multicast_del_grps(struct net_bridge *br);
-
+static void br_ip4_multicast_leave_group(struct net_bridge *br,
+			struct net_bridge_port *port, __be32 group);
+#if defined(CONFIG_IPV6) || defined(CONFIG_IPV6_MODULE)
+static void br_ip6_multicast_leave_group(struct net_bridge *br,
+			struct net_bridge_port *port, const struct in6_addr *group);
+#endif
 unsigned int br_mdb_rehash_seq;
 
 static inline int br_ip_equal(const struct br_ip *a, const struct br_ip *b)
@@ -958,10 +963,14 @@ static int br_ip4_multicast_igmp3_report(struct net_bridge *br,
 		default:
 			continue;
 		}
-
-		err = br_ip4_multicast_add_group(br, port, group);
-		if (err)
-			break;
+		if (((type == IGMPV3_CHANGE_TO_INCLUDE) ||
+			(type == IGMPV3_MODE_IS_INCLUDE)) && (ntohs(grec->grec_nsrcs) == 0)) {
+			br_ip4_multicast_leave_group(br, port, group);
+		} else {
+			err = br_ip4_multicast_add_group(br, port, group);
+			if (err)
+				break;
+		}
 	}
 
 	return err;
@@ -1018,10 +1027,14 @@ static int br_ip6_multicast_mld2_report(struct net_bridge *br,
 		default:
 			continue;
 		}
-
-		err = br_ip6_multicast_add_group(br, port, &grec->grec_mca);
-		if (!err)
-			break;
+		if (((grec->grec_type == MLD2_CHANGE_TO_INCLUDE) ||
+			(grec->grec_type == MLD2_MODE_IS_INCLUDE)) && (ntohs(*nsrcs) == 0)) {
+			br_ip6_multicast_leave_group(br, port, &grec->grec_mca);
+		} else {
+			err = br_ip6_multicast_add_group(br, port, &grec->grec_mca);
+			if (!err)
+				break;
+		}
 	}
 
 	return err;
