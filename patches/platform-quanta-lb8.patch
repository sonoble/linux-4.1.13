#Copyright 2012 Cumulus Networks, Inc.  All rights reserved.

Add platform support for the Quanta LB8 48x10GE networking systems

diff --git a/arch/powerpc/boot/dts/quanta_lb8.dts b/arch/powerpc/boot/dts/quanta_lb8.dts
new file mode 100644
index 0000000..44f76fc
--- /dev/null
+++ b/arch/powerpc/boot/dts/quanta_lb8.dts
@@ -0,0 +1,446 @@
+/*
+ * Quanta Computer LB8 Device Tree Source
+ *
+ * Copyright 2011, Cumulus Networks, LLC
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ *
+ * IMPORTANT - This file contains the "desired" device-tree as well as a
+ *             device-tree the mimics the one embedded in the FASTPATH
+ *             u-boot.  The desired device-tree is uncommented... mainly
+ *             to facilitate memory for when we build a uboot that will
+ *             accept an input DTB.  The desired device tree is delimited
+ *             by QUANTA_FASTPATH_HACK.
+ */
+
+/dts-v1/;
+/ {
+	model = "quanta,lb8";
+	compatible = "quanta,lb8";
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	aliases {
+		ethernet0 = &enet0;
+		serial0 = &serial0;
+		pcie0 = &pcie0;
+		fancontrol = &fancontrol;
+	};
+
+	chosen {
+	};
+
+	memory {
+		device_type = "memory";
+		reg = <0x0 0x0>;	// Filled by U-Boot
+	};
+
+	bcm_dma {
+		compatible = "early-dma-alloc";
+		// 64MB DMA region, aligned to 1MB
+		region_size = <0x04000000>;
+		alignment   = <0x00100000>;
+	};
+
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		PowerPC,8548@0 {
+			device_type = "cpu";
+			reg = <0>;
+			d-cache-line-size = <32>;	// 32 bytes
+			i-cache-line-size = <32>;	// 32 bytes
+			d-cache-size = <0x8000>;	// L1, 32K
+			i-cache-size = <0x8000>;	// L1, 32K
+			timebase-frequency = <0>;
+			bus-frequency = <0>;
+			clock-frequency = <0>;
+			next-level-cache = <&L2>;
+		};
+	};
+
+	soc8548@e0000000 {
+		device_type = "soc";
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <1>;
+		bus-frequency = <0>;		// Filled out by uboot.
+		ranges = <0x0000000 0xe0000000 0x00100000>;
+		reg = <0xe0000000 0x00100000>;  // CCSRBAR
+
+		memory-controller@2000 {
+			compatible = "fsl,mpc8548-memory-controller";
+			reg = <0x2000 0x1000>;
+			interrupt-parent = <&mpic>;
+			interrupts = <18 2>;
+		};
+
+		L2: l2-cache-controller@20000 {
+			compatible = "fsl,mpc8548-l2-cache-controller";
+			reg = <0x20000 0x1000>;
+			cache-line-size = <32>;	// 32 bytes
+			cache-size = <0x80000>;	// L2, 512K
+			interrupt-parent = <&mpic>;
+			interrupts = <16 2>;
+		};
+
+		mpic: pic@40000 {
+			interrupt-controller;
+			device_type = "open-pic";
+			compatible = "chrp,open-pic";
+			#address-cells = <0>;
+			#interrupt-cells = <2>;
+			built-in;
+			big-endian;
+			clock-frequency = <0>;
+			reg = <0x40000 0x40000>;
+		};
+
+		i2c@3000 {
+			device_type = "i2c";
+			compatible = "fsl-i2c";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0x3000 0x100>;
+			cell-index = <0>;
+			interrupt-parent = <&mpic>;
+			interrupts = <43 2>;
+			dfsrr;
+/* power supply status pins, need to determine */
+			pca9555@24 {
+		                compatible = "nxp,pca9555";
+				reg = <0x24>;
+			};
+/* power supply status pins, need to determine */
+			pca9555@25 {
+		                compatible = "nxp,pca9555";
+				reg = <0x25>;
+			};
+			fancontrol: fan@2-cd {
+		                compatible = "on,adt7463";
+				reg = <0x2c>;
+			};
+/* unused (on the board, but not connected)
+			fan@2e {
+		                compatible = "on,adt7463";
+				reg = <0x2e>;
+			};
+*/
+			config@52 {
+		                compatible = "at,24c02";
+				reg = <0x52>;
+			};
+			spd@53 {
+		                compatible = "at,spd";
+				reg = <0x53>;
+			};
+			eeprom@54 {
+				compatible = "at,24c02";
+				reg = <0x54>;
+				label = "board_eeprom";
+				read-only;
+			};
+/* unknown (redundant power supply, likely an at24 type eeprom)
+			unknown@58 {
+		                compatible = "cumulus,unknown";
+				reg = <0x58>;
+			};
+*/
+/* unknown (redundant power supply, likely an at24 type eeprom)
+			unknown@59 {
+		                compatible = "cumulus,unknown";
+				reg = <0x59>;
+			};
+*/
+			rtc@68 {
+		                compatible = "dallas,ds1338";
+				reg = <0x68>;
+			};
+		};
+
+		i2c@3100 {
+			device_type = "i2c";
+			compatible = "fsl-i2c";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0x3100 0x100>;
+			cell-index = <1>;
+			interrupt-parent = <&mpic>;
+			interrupts = <43 2>;
+			dfsrr;
+/* quanta I2C mux CPLD for SFP+ on ports 1-16 */
+			quanta-i2cmux@25 {
+		                compatible = "cumulus,quanta-i2cmux-16";
+				reg = <0x25>;
+			};
+/* quanta I2C mux CPLD for SFP+ on ports 17-32 */
+			quanta-i2cmux@26 {
+		                compatible = "cumulus,quanta-i2cmux-16";
+				reg = <0x26>;
+			};
+/* quanta I2C mux CPLD for SFP+ on ports 33-48 */
+			quanta-i2cmux@27 {
+		                compatible = "cumulus,quanta-i2cmux-16";
+				reg = <0x27>;
+			};
+		};
+
+		serial0: serial@4500 {
+			device_type = "serial";
+			compatible = "ns16550";
+			cell-index = <0>;
+			clock-frequency = <0>;
+			interrupt-parent = <&mpic>;
+			interrupts = <42 2>;
+			reg = <0x4500 0x100>;
+		};
+
+		enet0: ethernet@24000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			cell-index = <0>;
+			device_type = "network";
+			model = "eTSEC";
+			compatible = "gianfar";
+			interrupt-parent = <&mpic>;
+			interrupts = <29 2 30 2 34 2>;
+			reg = <0x00024000 0x00001000>;
+			phy-handle = <&phy1>;
+		};
+
+		mdio@24520 {
+			device_type = "mdio";
+			compatible = "fsl,gianfar-mdio";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0x00024520 0x00000020>;
+			phy1: ethernet-phy@1 {
+				device_type = "ethernet-phy";
+				reg = <1>;
+			};
+			tbi-phy@11 {
+				reg = <0x11>;
+				device_type = "tbi-phy";
+			};
+		};
+
+		global-utilities@e0000 {	//global utilities block
+			compatible = "fsl,mpc8548-guts";
+			reg = <0xe0000 0x1000>;
+			fsl,has-rstcr;
+		};
+/*
+		crypto@30000 {
+			device_type = "cruypto";
+			compatible = "fsl,sec2.1, talitos", "fsl,sec2.0, talitos";
+			model = "SEC3";
+			reg = <0x30000 0x10000>;
+			interrupts = <45 2>;
+			interrupt-parent = <&mpic>;
+			fsl,num-channels = <4>;
+			fsl,channel-fifo-len = <24>;
+			fsl,exec-units-mask = <0xfe>;
+			fsl,descriptor-types-mask = <0x12b0ebf>;
+		};
+*/
+/* Trident does not work with MSI
+		msi@41600 {
+			compatible = "fsl,mpic-msi";
+			reg = <0x41600 0x80>;
+			msi-available-ranges = <0 0x100>;
+			interrupts = <
+				0xe0 0
+				0xe1 0
+				0xe2 0
+				0xe3 0
+				0xe4 0
+				0xe5 0
+				0xe6 0
+				0xe7 0>;
+			interrupt-parent = <&mpic>;
+		};
+*/
+/*
+		dma@21300 {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "fsl,mpc8548-dma", "fsl,eloplus-dma";
+			reg = <0x21300 0x4>;
+			ranges = <0x0 0x21100 0x200>;
+			cell-index = <0>;
+			dma-channel@0 {
+				compatible = "fsl,mpc8548-dma-channel",
+						"fsl,eloplus-dma-channel";
+				reg = <0x0 0x80>;
+				cell-index = <0>;
+				interrupt-parent = <&mpic>;
+				interrupts = <20 2>;
+			};
+			dma-channel@80 {
+				compatible = "fsl,mpc8548-dma-channel",
+						"fsl,eloplus-dma-channel";
+				reg = <0x80 0x80>;
+				cell-index = <1>;
+				interrupt-parent = <&mpic>;
+				interrupts = <21 2>;
+			};
+			dma-channel@100 {
+				compatible = "fsl,mpc8548-dma-channel",
+						"fsl,eloplus-dma-channel";
+				reg = <0x100 0x80>;
+				cell-index = <2>;
+				interrupt-parent = <&mpic>;
+				interrupts = <22 2>;
+			};
+			dma-channel@180 {
+				compatible = "fsl,mpc8548-dma-channel",
+						"fsl,eloplus-dma-channel";
+				reg = <0x180 0x80>;
+				cell-index = <3>;
+				interrupt-parent = <&mpic>;
+				interrupts = <23 2>;
+			};
+		};
+*/
+/* NOT USED
+		ecm-law@0 {
+			compatible = "fsl,ecm-law";
+			reg = <0x0 0x1000>;
+			fsl,num-laws = <10>;
+		};
+*/
+/*
+		ecm@1000 {
+			compatible = "fsl,mpc8544-ecm", "fsl,ecm";
+			reg = <0x1000 0x1000>;
+			interrupts = <17 2>;
+			interrupt-parent = <&mpic>;
+		};
+*/
+	};
+/*
+	pci0: pci@e0008000 {
+		device_type = "pci";
+		compatible = "fsl,mpc8540-pci";
+		clock-frequency = <66666666>;
+		#address-cells = <3>;
+		#size-cells = <2>;
+		reg = <0xe0008000 0x1000>;
+		bus-range = <0 0>;
+		ranges = <
+			0x2000000 0x0 0x80000000 0x80000000 0x0 0x10000000
+			0x1000000 0x0 0x00000000 0xe2000000 0x0 0x00800000
+		>;
+		interrupt-parent = <&mpic>;
+		#interrupt-cells = <1>;
+		interrupts = <24 2>;
+		interrupt-map-mask = <
+			0x0000f800 0x00000000 0x00000000 0x00000007
+		>;
+		interrupt-map = <
+			// IDSEL 0x12 Slot 1
+			0x00009000 0x00000000 0x00000000 0x00000001 &mpic 0 1
+		>;
+	};
+*/
+	pcie0: pcie@e000a000 {
+		device_type = "pci";
+		compatible = "fsl,mpc8548-pcie";
+		clock-frequency = <33333333>;
+		#address-cells = <3>;
+		#size-cells = <2>;
+		reg = <0xe000a000 0x00001000>;
+		bus-range = <0 255>;
+		ranges = <
+			0x02000000 0x00000000 0xa0000000 0xa0000000 0x00000000 0x20000000
+			0x01000000 0x00000000 0x00000000 0xe3000000 0x00000000 0x00100000
+		>;
+		interrupt-parent = <&mpic>;
+		#interrupt-cells = <1>;
+		interrupts = <10 2>;
+		interrupt-map-mask = <
+			0x0000f800 0x00000000 0x00000000 0x00000007
+		>;
+		interrupt-map = <
+			/* IDSEL 0x0 */
+			0x00000000 0x00000000 0x00000000 0x00000001 &mpic 0 1
+			0x00000000 0x00000000 0x00000000 0x00000002 &mpic 1 1
+			0x00000000 0x00000000 0x00000000 0x00000003 &mpic 2 1
+			0x00000000 0x00000000 0x00000000 0x00000004 &mpic 3 1
+		>;
+	};
+
+	localbus@0xe0005000 {
+		compatible = "fsl,pq3-localbus", "simple-bus";
+		interrupt-parent = <&mpic>;
+		interrupts = <19 2>;
+		#address-cells = <2>;
+		#size-cells = <1>;
+		reg = <0xe0005000 0x1000>;
+		ranges = <
+			0 0 0xfe000000 0x02000000
+			1 0 0xfc000000 0x02000000
+			2 0 0xf0000000 0x00020000
+			3 0 0xf0010000 0x00010000
+			4 0 0xf2000000 0x00100000
+			5 0 0xe0000000 0x00000002
+		>;
+
+		flash@0,0 {
+			compatible = "cfi-flash";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			reg = <0 0 0x02000000>;
+			bank-width = <2>;
+			device-width = <2>;
+			partition@0 {
+				label = "system image";
+				reg = <0x00000000 0x01f80000>;
+			};
+			partition@2 {
+				label = "uboot-env";
+				reg = <0x01f80000 0x00020000>;
+				env_size = <0x2000>;
+			};
+			partition@3 {
+				label = "uboot";
+				reg = <0x01fa0000 0x00060000>;
+			};
+		};
+
+		flash@1,0 {
+			compatible = "cfi-flash";
+			#address-cells = <1>;
+			#size-cells = <1>;
+			reg = <1 0 0x02000000>;
+			bank-width = <2>;
+			device-width = <2>;
+			partition@0 {
+				label = "/var";
+				reg = <0x00000000 0x01c00000>;
+			};
+			partition@1 {
+				label = "/mnt/persist";
+				reg = <0x01c00000 0x00400000>;
+			};
+		};
+/*
+		cfcard@2 {
+			compatible = "qci-ide";
+			device_type = "ide";
+			reg = <
+				2 0 0x00020000
+				4 0 0x00100000
+			>;
+			ioport_shift = <1>;
+			reg-shift = <1>;
+			#interrupt-cells = <1>;
+			interrupts = <2 2>;
+			interrupt-parent = <&mpic>;
+		};
+*/
+	};
+};
diff --git a/arch/powerpc/platforms/85xx/quanta_lb8.c b/arch/powerpc/platforms/85xx/quanta_lb8.c
new file mode 100644
index 0000000..329cf75
--- /dev/null
+++ b/arch/powerpc/platforms/85xx/quanta_lb8.c
@@ -0,0 +1,260 @@
+/*
+ * quanta_lb8 setup and early boot code plus other random bits.
+ *
+ * Copyright 2012 Cumulus Networks, inc.
+ *
+ * Derived from mpc8548cds.c
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/stddef.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/errno.h>
+#include <linux/reboot.h>
+#include <linux/pci.h>
+#include <linux/kdev_t.h>
+#include <linux/major.h>
+#include <linux/console.h>
+#include <linux/delay.h>
+#include <linux/seq_file.h>
+#include <linux/initrd.h>
+#include <linux/module.h>
+#include <linux/interrupt.h>
+#include <linux/fsl_devices.h>
+#include <linux/of_platform.h>
+#include <linux/early_dma_alloc.h>
+
+#include <asm/system.h>
+#include <asm/pgtable.h>
+#include <asm/page.h>
+#include <linux/atomic.h>
+#include <asm/time.h>
+#include <asm/io.h>
+#include <asm/machdep.h>
+#include <asm/ipic.h>
+#include <asm/pci-bridge.h>
+#include <asm/irq.h>
+#include <mm/mmu_decl.h>
+#include <asm/prom.h>
+#include <asm/udbg.h>
+#include <asm/mpic.h>
+
+#include <sysdev/fsl_soc.h>
+#include <sysdev/fsl_pci.h>
+#include <asm/fsl_guts.h>
+#include "quanta_lb8.h"
+
+/*------------------------------------------------------------------------------
+ *
+ * General-Purpose IO
+ *
+ * Output Pins : PCI2_AD[15:8], GPOUT[24:31]
+ * Input Pins  : PCI2_AD[7:0]
+ *
+ *------------------------------------------------------------------------------
+ */
+
+enum quanta_lb8_gpio {
+
+	GPIOCR_EN           = 0x00030200,     /* PCIout, PCIin, GPout */
+
+	GPOUTDR_DMA_RST_N   = 0x00400000,     /* PCI2_AD[14] - cpld reset		*/
+	GPOUTDR_CF_RST_N    = 0x00200000,     /* PCI2_AD[13] - reset compact flash	*/
+	GPOUTDR_CF_PWR_EN_N = 0x00100000,     /* PCI2_AD[12] - compact flash power	*/
+	GPOUTDR_LED_RST_N   = 0x00080000,     /* PCI2_AD[11] - led board reset	*/
+	GPOUTDR_SYS_LED_N   = 0x00040000,     /* PCI2_AD[10] - system led		*/
+	GPOUTDR_HW_RST_N    = 0x00020000,     /* PCI2_AD[9]  - hard reset		*/
+	GPOUTDR_CF_BUS_EN_N = 0x00010000,     /* PCI2_AD[8]  - compact flash enable	*/
+	GPOUTDR_SW_RST_N    = 0x00000080,     /* GPOUT[24]   - software reset		*/
+	GPOUTDR_PLD1_RST_N  = 0x00000040,     /* GPOUT[25]   - pld1 reset		*/
+	GPOUTDR_PLD2_RST_N  = 0x00000020,     /* GPOUT[26]   - pld2 reset		*/
+	GPOUTDR_PLD3_RST_N  = 0x00000010,     /* GPOUT[27]   - pld3 reset		*/
+	GPOUTDR_PHY_RST     = 0x00000002,     /* GPOUT[30]   - mgmt port phy reset	*/
+
+	GPINDR_CF_DET_0_N   = 0x00040000,     /* PCI2_AD[2]  - compact flash present 0*/
+	GPINDR_CF_DET_1_N   = 0x00020000,     /* PCI2_AD[1]  - compact flash present 1*/
+	GPINDR_CF_OC_DET_N  = 0x00010000      /* PCI2_AD[0]  - compact flash overcurrent */
+};
+
+/*------------------------------------------------------------------------------
+ *
+ * Platform specific functions
+ *
+ *------------------------------------------------------------------------------
+ */
+
+static struct ccsr_guts_85xx __iomem *quanta_lb8_guts;
+
+static void quanta_lb8_restart(char *cmd)
+{
+	/* from MPC8548 spec */
+	__be32 HRESET = 0x00000002;
+
+	local_irq_disable();
+	/* assert HW reset via internal register */
+	setbits32(&quanta_lb8_guts->rstcr, HRESET);
+	/* assert HW reset via GPIO */
+	clrbits32(&quanta_lb8_guts->gpoutdr, GPOUTDR_HW_RST_N);
+	while(1);
+}
+
+static void __init quanta_lb8_pic_init(void)
+{
+	struct mpic *mpic;
+	struct resource r;
+	struct device_node *np = NULL;
+
+	np = of_find_node_by_type(np, "open-pic");
+
+	if (np == NULL) {
+		printk(KERN_ERR "Could not find open-pic node\n");
+		return;
+	}
+
+	if (of_address_to_resource(np, 0, &r)) {
+		printk(KERN_ERR "Failed to map mpic register space\n");
+		of_node_put(np);
+		return;
+	}
+
+	mpic = mpic_alloc(np, r.start,
+			MPIC_PRIMARY | MPIC_WANTS_RESET | MPIC_BIG_ENDIAN,
+			0, 256, " OpenPIC  ");
+	BUG_ON(mpic == NULL);
+	of_node_put(np);
+
+	mpic_init(mpic);
+}
+
+/*
+ * Setup the architecture
+ */
+static void __init quanta_lb8_setup_arch(void)
+{
+	struct device_node *np;
+
+	if (ppc_md.progress)
+		ppc_md.progress("quanta_lb8_setup_arch()", 0);
+
+        /* set the clock frequency */
+	np = of_find_node_by_type(NULL, "cpu");
+	if (np != 0) {
+		const unsigned int *fp;
+
+		fp = of_get_property(np, "clock-frequency", NULL);
+		if (fp != 0)
+			loops_per_jiffy = *fp / HZ;
+		else
+			loops_per_jiffy = 500000000 / HZ;
+		of_node_put(np);
+	}
+
+#ifdef CONFIG_PCI
+	/* setup PCI */
+	for_each_node_by_type(np, "pci") {
+		if (of_device_is_compatible(np, "fsl,mpc8540-pci") ||
+		    of_device_is_compatible(np, "85xx") ||
+		    of_device_is_compatible(np, "fsl,mpc8548-pcie")) {
+			struct resource rsrc;
+			of_address_to_resource(np, 0, &rsrc);
+			if ((rsrc.start & 0xfffff) == 0x8000)
+				fsl_add_bridge(np, 1);
+			else
+				fsl_add_bridge(np, 0);
+		}
+	}
+
+
+#endif
+
+	/* map the global utilities register */
+	printk(KERN_INFO "map MPC8548 global utilities register\n");
+	np = of_find_compatible_node(NULL, NULL, "fsl,mpc8548-guts");
+	if (!np) {
+		pr_err("%s: missing mpc8548 GUTs device node\n",
+		       __func__);
+		return;
+	}
+	quanta_lb8_guts = of_iomap(np, 0);
+
+	if (!quanta_lb8_guts) {
+		pr_err("%s: could not map mpc8548 GUTs register space\n",
+		       __func__);
+		return;
+	}
+
+	/* initialize powersave idle to be disabled */
+	powersave_nap = 0;
+
+#ifdef CONFIG_EARLY_DMA_ALLOC
+	eda_init();
+#endif
+
+}
+
+static void quanta_lb8_show_cpuinfo(struct seq_file *m)
+{
+	uint pvid, svid, phid1;
+	uint memsize = total_memory;
+
+	pvid = mfspr(SPRN_PVR);
+	svid = mfspr(SPRN_SVR);
+
+	seq_printf(m, "Vendor\t\t: Freescale Semiconductor\n");
+	seq_printf(m, "PVR\t\t: 0x%x\n", pvid);
+	seq_printf(m, "SVR\t\t: 0x%x\n", svid);
+
+	/* Display cpu Pll setting */
+	phid1 = mfspr(SPRN_HID1);
+	seq_printf(m, "PLL setting\t: 0x%x\n", ((phid1 >> 24) & 0x3f));
+
+	/* Display the amount of memory */
+	seq_printf(m, "Memory\t\t: %d MB\n", memsize / (1024 * 1024));
+}
+
+
+/*
+ * Called very early, device-tree isn't unflattened
+ */
+static int __init quanta_lb8_probe(void)
+{
+        unsigned long root = of_get_flat_dt_root();
+
+	if (of_flat_dt_is_compatible(root, "quanta,lb8")) {
+		return 1;
+	}
+
+	return 0;
+}
+
+static struct of_device_id __initdata quanta_lb8_ids[] = {
+	{ .type = "soc", },
+	{ .compatible = "soc", },
+	{ .compatible = "simple-bus", },
+	{},
+};
+
+static int __init quanta_lb8_publish_devices(void)
+{
+	return of_platform_bus_probe(NULL, quanta_lb8_ids, NULL);
+}
+machine_device_initcall(quanta_lb8, quanta_lb8_publish_devices);
+
+define_machine(quanta_lb8) {
+	.name			= "Quanta Computer LB8",
+	.probe			= quanta_lb8_probe,
+	.setup_arch		= quanta_lb8_setup_arch,
+	.init_IRQ		= quanta_lb8_pic_init,
+	.show_cpuinfo		= quanta_lb8_show_cpuinfo,
+	.get_irq		= mpic_get_irq,
+	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
+	.power_save		= e500_idle,
+	.restart		= quanta_lb8_restart,
+	.calibrate_decr		= generic_calibrate_decr,
+	.progress		= udbg_progress,
+};
diff --git a/arch/powerpc/platforms/85xx/quanta_lb8.h b/arch/powerpc/platforms/85xx/quanta_lb8.h
new file mode 100644
index 0000000..6ba745a
--- /dev/null
+++ b/arch/powerpc/platforms/85xx/quanta_lb8.h
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2012, Cumulus Networks, inc  all rights reserved
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+ * General-Purpose Output Data Register (GPOUTDR)
+ *
+ * For GPOUTDR, need:
+ *     GPOUT (GPOUTDR[0:7] corresponds to TSEC2_TXD[7:0]) : GPOUTDR[0:7] = 00000000
+ *     GPOUT (GPOUTDR[8:15] corresponds to PCI2_AD[15:8]) : GPOUTDR[8:15] = 11111111
+ *     Reserved : GPOUTDR[16:23] = 00000000
+ *     GPOUT :  GPOUTDR[24:31] = 1000000
+ *
+ * 0       4       8          12     16     20   24      28
+ * 0000 0000 1111 1111 0000 0000 1000 0000 = 0x00FF0080
+ *
+ *   LB8 GPIO Signal :
+ *
+ *  output :
+ * 0    GPOUTDR[8]  <--> PCI2_AD[15] : N/A
+ * 1    GPOUTDR[9]  <--> PCI2_AD[14] : DMA_RST_N (Reset CPLD, active low)
+ * 1    GPOUTDR[10] <--> PCI2_AD[13] : CF_RST_N (Reset Compact Flash card, active low)
+ * 0    GPOUTDR[11] <--> PCI2_AD[12] : CF_PWR_EN_N (Power enable for Compact Flash card, active low)
+ * 0    GPOUTDR[12] <--> PCI2_AD[11] : LED_RST_N (Reset LED board, active high)
+ * 0    GPOUTDR[13] <--> PCI2_AD[10] : LED_STATUS (The LED indicate system status, active low)
+ * 1    GPOUTDR[14] <--> PCI2_AD[9] : HW_RST_N (Hardware reset, active low)
+ * 0    GPOUTDR[15] <--> PCI2_AD[8] : CF_BUS_EN_N (Bus enable for Compact Flash card, active low)
+ *
+ * input :
+ *      GPINDR[8]  <--> PCI2_AD[7] : N/A
+ *      GPINDR[9]  <--> PCI2_AD[6] : N/A
+ *      GPINDR[10] <--> PCI2_AD[5] : N/A
+ *      GPINDR[11] <--> PCI2_AD[4] : N/A
+ *      GPINDR[12] <--> PCI2_AD[3] : N/A
+ *      GPINDR[13] <--> PCI2_AD[2] : CF_DET0 (Compact Flash card present 0, active low)
+ *      GPINDR[14] <--> PCI2_AD[1] : CF_DET1 (Compact Flash card present 1, active low)
+ *      GPINDR[15] <--> PCI2_AD[0] : CF_OC_N (Compact Flash card over-current detect active low)
+ *
+ * output :
+ * 1    GPOUTDR[24] <--> GPOUT[24] : SW_RST_N (Software reset, active low)
+ * 1    GPOUTDR[25] <--> GPOUT[25] : PLD1_RST_N (PLD1 reset signal, active low)
+ * 1    GPOUTDR[26] <--> GPOUT[26] : PLD2_RST_N (PLD2 reset signal, active low)
+ * 1    GPOUTDR[27] <--> GPOUT[27] : PLD3_RST_N (PLD3 reset signal, active low)
+ */
+
+#define QUANTA_LBX_GPIORST_N 0x00020000
