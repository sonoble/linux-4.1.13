Link local L2 frames received on bridge member port are counted as dropped
on the interface even though they are actually delivered and consumed.
This is to fix the mis-accounting.

diff --git a/net/core/dev.c b/net/core/dev.c
index 1b14767..ef84f5a 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -3241,6 +3241,8 @@ static int __netif_receive_skb(struct sk_buff *skb)
 	bool deliver_exact = false;
 	int ret = NET_RX_DROP;
 	__be16 type;
+	bool already_delivered = false;
+	bool rx_handler_passed = false;
 
 	if (!netdev_tstamp_prequeue)
 		net_timestamp_check(skb);
@@ -3311,6 +3313,8 @@ ncls:
 		if (pt_prev) {
 			ret = deliver_skb(skb, pt_prev, orig_dev);
 			pt_prev = NULL;
+			if (ret == NET_RX_SUCCESS)
+				already_delivered = true;
 		}
 		switch (rx_handler(&skb)) {
 		case RX_HANDLER_CONSUMED:
@@ -3321,6 +3325,7 @@ ncls:
 		case RX_HANDLER_EXACT:
 			deliver_exact = true;
 		case RX_HANDLER_PASS:
+			rx_handler_passed = true;
 			break;
 		default:
 			BUG();
@@ -3348,7 +3353,8 @@ ncls:
 	if (pt_prev) {
 		ret = pt_prev->func(skb, skb->dev, pt_prev, orig_dev);
 	} else {
-		atomic_long_inc(&skb->dev->rx_dropped);
+		if (!(already_delivered && rx_handler_passed))
+			atomic_long_inc(&skb->dev->rx_dropped);
 		kfree_skb(skb);
 		/* Jamal, now you will not able to escape explaining
 		 * me how you were going to use this. :-)
