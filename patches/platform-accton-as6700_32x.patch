Accton AS6700_32X

diff --git a/arch/powerpc/boot/dts/accton_as6700_32x.dts b/arch/powerpc/boot/dts/accton_as6700_32x.dts
new file mode 100644
index 0000000..cab8483
--- /dev/null
+++ b/arch/powerpc/boot/dts/accton_as6700_32x.dts
@@ -0,0 +1,349 @@
+/*
+ * Accton AS6700_32X Device Tree Source
+ *
+ * Copyright 2011-2012 Freescale Semiconductor Inc.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Freescale Semiconductor nor the
+ *       names of its contributors may be used to endorse or promote products
+ *       derived from this software without specific prior written permission.
+ *
+ *
+ * ALTERNATIVELY, this software may be distributed under the terms of the
+ * GNU General Public License ("GPL") as published by the Free Software
+ * Foundation, either version 2 of that License or (at your option) any
+ * later version.
+ *
+ * THIS SOFTWARE IS PROVIDED BY Freescale Semiconductor ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL Freescale Semiconductor BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+/include/ "fsl/p2041si-pre.dtsi"
+
+/ {
+	model = "accton,as6700_32x";
+	compatible = "accton,as6700_32x";
+	#address-cells = <2>;
+	#size-cells = <2>;
+	interrupt-parent = <&mpic>;
+
+	aliases {
+		ethernet0 = &enet3;
+		ethernet1 = &enet0;
+		phy_sgmii_2 = &phy_sgmii_2;
+		phy_sgmii_1 = &phy_sgmii_1;
+
+	};
+
+	memory {
+		device_type = "memory";
+	};
+
+	bcm_dma {
+		compatible = "early-dma-alloc";
+		// 64MB DMA region, aligned to 1MB
+		region_size = <0x04000000>;
+		alignment   = <0x00100000>;
+	};
+
+	dcsr: dcsr@f00000000 {
+		ranges = <0x00000000 0xf 0x00000000 0x01008000>;
+	};
+
+	bportals: bman-portals@ff4000000 {
+		ranges = <0x0 0xf 0xf4000000 0x200000>;
+	};
+
+	qportals: qman-portals@ff4200000 {
+		ranges = <0x0 0xf 0xf4200000 0x200000>;
+	};
+
+	soc: soc@ffe000000 {
+		ranges = <0x00000000 0xf 0xfe000000 0x1000000>;
+		reg = <0xf 0xfe000000 0 0x00001000>;
+
+		spi@110000 {
+			flash@0 {
+				#address-cells = <1>;
+				#size-cells = <1>;
+				compatible = "micron,n25q512";
+				reg = <0>;
+				spi-max-frequency = <12000000>; /* input clock */
+				partition@uboot {
+					label = "uboot";
+					reg = <0x00000000 0x00100000>;
+				};
+				partition@uboot-env {
+					label = "uboot-env";
+					reg = <0x00100000 0x00010000>;
+					env_size = <0x2000>;
+				};
+				partition@Fman-FW {
+					label = "Fman-FW";
+					reg = <0x00110000 0x00010000>;
+					read-only;
+				};
+				partition@board_eeprom {
+					label = "board_eeprom";
+					reg = <0x00120000 0x00010000>;
+				};
+				partition@onie {
+					label = "onie";
+					reg = <0x00130000 0x00800000>;
+				};
+				partition@diag {
+					label = "diag";
+					reg = <0x00930000 0x02000000>;
+				};
+				partition@reserved {
+					label = "reserved";
+					reg = <0x02930000 0x016d0000>;
+				};
+			};
+		};
+
+		i2c@118000 {
+			fsl,preserve-clocking;
+
+			rtc@68 {
+				compatible = "maxim,ds1672";
+				reg = <0x68>;
+			};
+			spd@50 {
+				compatible = "at24,spd";
+				reg = <0x50>;
+			};
+		};
+
+		i2c@118100 {
+			fsl,preserve-clocking;
+
+			/include/ "accton_as670x_baseboard_i2c.dtsi"
+		};
+
+		i2c@119100 {
+			fsl,preserve-clocking;
+
+			mux@70 {
+			       compatible = "ti,pca9546";
+			       reg = <0x70>;
+			       deselect-on-exit;
+			       #address-cells = <1>;
+			       #size-cells = <0>;
+
+			       i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+
+					temp@4d {
+						compatible = "maxim,max6581";
+						reg = <0x4d>;
+					};
+			       };
+			       i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+
+					power@34 {
+						compatible = "ti,ucd9090";
+						reg = <0x34>;
+					};
+			       };
+			       i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					/* Not sure what the two addr per PSU are for */
+					/*
+					** The eeprom utilities look for a label that
+					** ends with "_eeprom".
+					*/
+					psu_eeprom@39 {
+						compatible = "at,24c02";
+						reg = <0x39>;
+						/* Haven't seen this one work yet */
+						label = "psu1_eeprom";
+						read-only;
+					};
+					psu_unknown@3d {
+						compatible = "at,24c02";
+						reg = <0x3d>;
+						/* Haven't seen this one work yet */
+						// label = "psu1_eeprom2";
+						read-only;
+					};
+					psu_eeprom@3a {
+						compatible = "at,24c02";
+						reg = <0x3a>;
+						/* This one contains valid data */
+						label = "psu2_eeprom";
+						read-only;
+					};
+					psu_unknown@3e {
+						compatible = "at,24c02";
+						reg = <0x3e>;
+						/* This one is unformatted */
+						// label = "psu2_eeprom2";
+						read-only;
+					};
+			       };
+			};
+		};
+
+		usb1: usb@211000 {
+			dr_mode = "host";
+		};
+
+		fman0: fman@400000 {
+			enet0: ethernet@e0000 {
+				tbi-handle = <&tbi0>;
+				phy-handle = <&phy_sgmii_2>;
+				phy-connection-type = "sgmii";
+			};
+
+			mdio0: mdio@e1120 {
+				tbi0: tbi-phy@8 {
+					reg = <0x8>;
+					device_type = "tbi-phy";
+				};
+
+				phy_sgmii_2: ethernet-phy@2 {
+					reg = <0x2>;
+				};
+
+				phy_sgmii_1: ethernet-phy@1 {
+					reg = <0x1>;
+				};
+			};
+
+			ethernet@e4000 {
+				status = "disabled";
+			};
+
+			enet3: ethernet@e6000 {
+				tbi-handle = <&tbi3>;
+				phy-handle = <&phy_sgmii_1>;
+				phy-connection-type = "sgmii";
+			};
+
+			mdio@e7120 {
+				tbi3: tbi-phy@8 {
+					reg = <8>;
+					device_type = "tbi-phy";
+				};
+			};
+
+		};
+	};
+
+	rio: rapidio@ffe0c0000 {
+		reg = <0xf 0xfe0c0000 0 0x11000>;
+
+		port1 {
+			ranges = <0 0 0xc 0x20000000 0 0x10000000>;
+		};
+		port2 {
+			ranges = <0 0 0xc 0x30000000 0 0x10000000>;
+		};
+	};
+
+
+	lbc: localbus@ffe124000 {
+		reg = <0xf 0xfe124000 0 0x1000>;
+		ranges = <0 0 0xf 0xec000000 0x04000000>;
+	};
+
+	pci0: pcie@ffe200000 {
+		reg = <0xf 0xfe200000 0 0x1000>;
+		ranges = <0x02000000 0x0 0xe0000000
+			  0x0 0xd0000000
+			  0x0 0x08000000
+
+			  0x01000000 0x0 0x00000000
+			  0x0 0xf8000000
+			  0x0 0x00010000>;
+		pcie@0 {
+			ranges = <0x02000000 0 0xe0000000
+				  0x02000000 0 0xe0000000
+				  0 0x08000000
+
+				  0x01000000 0 0x00000000
+				  0x01000000 0 0x00000000
+				  0 0x00010000>;
+		};
+	};
+
+	pci1: pcie@ffe201000 {
+		reg = <0xf 0xfe201000 0 0x1000>;
+		ranges = <0x02000000 0x0 0xe0000000
+			  0x0 0xd8000000
+			  0x0 0x08000000
+
+			  0x01000000 0x0 0x00000000
+			  0x0 0xf8010000
+			  0x0 0x00010000>;
+		pcie@0 {
+			ranges = <0x02000000 0 0xe0000000
+				  0x02000000 0 0xe0000000
+				  0 0x08000000
+
+				  0x01000000 0 0x00000000
+				  0x01000000 0 0x00000000
+				  0 0x00010000>;
+		};
+	};
+
+	pci2: pcie@ffe202000 {
+		reg = <0xf 0xfe202000 0 0x1000>;
+		ranges = <0x02000000 0x0 0xe0000000
+			  0x0 0xe0000000
+			  0x0 0x08000000
+
+			  0x01000000 0x0 0x00000000
+			  0x0 0xf8020000
+			  0x0 0x00010000>;
+
+		pcie@0 {
+			ranges = <0x02000000 0 0xe0000000
+				  0x02000000 0 0xe0000000
+				  0 0x08000000
+
+				  0x01000000 0 0x00000000
+				  0x01000000 0 0x00000000
+				  0 0x00010000>;
+		};
+	};
+
+	fsl,dpaa {
+		compatible = "fsl,p2041-dpaa", "fsl,dpaa";
+
+		ethernet@0 {
+			compatible = "fsl,p2041-dpa-ethernet", "fsl,dpa-ethernet";
+			fsl,fman-mac = <&enet3>;
+		};
+
+		ethernet@1 {
+			compatible = "fsl,p2041-dpa-ethernet", "fsl,dpa-ethernet";
+			fsl,fman-mac = <&enet0>;
+		};
+	};
+};
+
+/include/ "fsl/p2041si-post.dtsi"
+/include/ "fsl/qoriq-dpaa-res1.dtsi"
diff --git a/arch/powerpc/boot/dts/accton_as670x_baseboard_i2c.dtsi b/arch/powerpc/boot/dts/accton_as670x_baseboard_i2c.dtsi
new file mode 100644
index 0000000..8bd4c3a
--- /dev/null
+++ b/arch/powerpc/boot/dts/accton_as670x_baseboard_i2c.dtsi
@@ -0,0 +1,696 @@
+/*
+ * Accton AS670X Baseboard I2C devices.
+ *
+ * Copyright 2014 Cumulus Networks, Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+fanpld@35 {
+	compatible = "accton,as670x_32x_fanpld";
+	reg = <0x35>;
+};
+
+/* XXX - decode-syseeprom can't handle i2c nodes labeled "cpld" */
+syspld@31 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	compatible = "accton,as670x_32x_syspld";
+	reg = <0x31>;
+
+	i2c@0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <0>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port1";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port1_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port1_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port21_rx";
+		};
+	};
+	i2c@1 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <1>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port2";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port2_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port2_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port22_rx";
+		};
+	};
+	i2c@2 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <2>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port3";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port3_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port3_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port23_rx";
+		};
+	};
+	i2c@3 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <3>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port4";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port4_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port4_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port24_rx";
+		};
+	};
+	i2c@4 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <4>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port5";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port5_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port5_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port25_rx";
+		};
+	};
+	i2c@5 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <5>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port6";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port6_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port6_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port26_rx";
+		};
+	};
+	i2c@6 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <6>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port7";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port7_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port7_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port27_rx";
+		};
+	};
+	i2c@7 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <7>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port8";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port8_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port8_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port28_rx";
+		};
+	};
+	i2c@8 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <8>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port9";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port9_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port9_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port29_rx";
+		};
+	};
+	i2c@9 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <9>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port10";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port10_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port10_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port30_rx";
+		};
+	};
+	i2c@10 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <10>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port11";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port11_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port11_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port31_rx";
+		};
+	};
+	i2c@11 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <11>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port12";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port12_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port12_rx";
+		};
+		rx_retimer@19 {
+			compatible = "ti,ds100df410";
+			reg = <0x19>;
+			label = "port32_rx";
+		};
+	};
+	i2c@12 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <12>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port13";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port13_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port13_rx";
+		};
+	};
+	i2c@13 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <13>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port14";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port14_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port14_rx";
+		};
+	};
+	i2c@14 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <14>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port15";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port15_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port15_rx";
+		};
+	};
+	i2c@15 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <15>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port16";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port16_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port16_tx";
+		};
+	};
+	i2c@16 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <16>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port17";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port17_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port17_rx";
+		};
+	};
+	i2c@17 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <17>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port18";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port18_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port18_rx";
+		};
+	};
+	i2c@18 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <18>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port19";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port19_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port19_rx";
+		};
+	};
+	i2c@19 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <19>;
+		sfp_eeprom@50 {
+			compatible = "sff8436";
+			reg = <0x50>;
+			label = "port20";
+		};
+		tx_retimer@1a {
+			compatible = "ti,ds100df410";
+			reg = <0x1a>;
+			label = "port20_tx";
+		};
+		rx_retimer@18 {
+			compatible = "ti,ds100df410";
+			reg = <0x18>;
+			label = "port20_rx";
+		};
+	};
+	i2c@20 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <20>;
+		gpio@20 {
+			// QSFP+ discrete signals
+			compatible = "ti,pca9506";
+			reg = <0x20>;
+		};
+		mux@70 {
+			compatible = "ti,pca9548";
+			reg = <0x70>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			i2c@0 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <0>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port21_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port21";
+				};
+			};
+			i2c@1 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <1>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port22_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port22";
+				};
+			};
+			i2c@2 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <2>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port23_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port23";
+				};
+			};
+			i2c@3 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <3>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port24_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port24";
+				};
+			};
+			i2c@4 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <4>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port25_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port25";
+				};
+			};
+			i2c@5 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <5>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port26_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port26";
+				};
+			};
+		};
+	};
+	i2c@21 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <21>;
+		gpio@20 {
+			// QSFP+ discrete signals
+			compatible = "ti,pca9506";
+			reg = <0x20>;
+		};
+		mux@70 {
+			compatible = "ti,pca9548";
+			reg = <0x70>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			i2c@0 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <0>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port27_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port27";
+				};
+			};
+			i2c@1 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <1>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port28_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port28";
+				};
+			};
+			i2c@2 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <2>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port29_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port29";
+				};
+			};
+			i2c@3 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <3>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port30_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port30";
+				};
+			};
+			i2c@4 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <4>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port31_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port31";
+				};
+			};
+			i2c@5 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				reg = <5>;
+				tx_retimer@1a {
+					compatible = "ti,ds100df410";
+					reg = <0x18>;
+					label = "port32_tx";
+				};
+				sfp_eeprom@50 {
+					compatible = "sff8436";
+					reg = <0x50>;
+					label = "port32";
+				};
+			};
+		};
+	};
+};
diff --git a/arch/powerpc/platforms/85xx/accton_as6700_32x.c b/arch/powerpc/platforms/85xx/accton_as6700_32x.c
new file mode 100644
index 0000000..c3c4474
--- /dev/null
+++ b/arch/powerpc/platforms/85xx/accton_as6700_32x.c
@@ -0,0 +1,77 @@
+/*
+ * Accton AS6700_32X Setup
+ *
+ * Copyright 2011 Freescale Semiconductor Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/kernel.h>
+#include <linux/pci.h>
+#include <linux/kdev_t.h>
+#include <linux/delay.h>
+#include <linux/interrupt.h>
+#include <linux/phy.h>
+#include <linux/early_dma_alloc.h>
+
+#include <asm/system.h>
+#include <asm/time.h>
+#include <asm/machdep.h>
+#include <asm/pci-bridge.h>
+#include <mm/mmu_decl.h>
+#include <asm/prom.h>
+#include <asm/udbg.h>
+#include <asm/mpic.h>
+
+#include <linux/of_platform.h>
+#include <sysdev/fsl_soc.h>
+#include <sysdev/fsl_pci.h>
+#include <asm/ehv_pic.h>
+
+#include "corenet_ds.h"
+
+/*
+ * Called very early, device-tree isn't unflattened
+ */
+static int __init accton_as6700_32x_probe(void)
+{
+	unsigned long root = of_get_flat_dt_root();
+
+	if (of_flat_dt_is_compatible(root, "accton,as6700_32x"))
+		return 1;
+
+	return 0;
+}
+
+static void __init accton_as6700_32x_setup_arch(void) {
+	corenet_ds_setup_arch();
+#ifdef CONFIG_EARLY_DMA_ALLOC
+	eda_init();
+#endif
+}
+
+
+define_machine(accton_as6700_32x) {
+	.name			= "Accton AS6700_32X",
+	.probe			= accton_as6700_32x_probe,
+	.setup_arch		= accton_as6700_32x_setup_arch,
+	.init_IRQ		= corenet_ds_pic_init,
+#ifdef CONFIG_PCI
+	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
+#endif
+	.get_irq		= mpic_get_coreint_irq,
+	.restart		= fsl_rstcr_restart,
+	.calibrate_decr		= generic_calibrate_decr,
+	.progress		= udbg_progress,
+	.power_save		= e500_idle,
+	.init_early		= corenet_ds_init_early,
+};
+
+machine_device_initcall(accton_as6700_32x, corenet_ds_publish_devices);
+
+#ifdef CONFIG_SWIOTLB
+machine_arch_initcall(accton_as6700_32x, swiotlb_setup_bus_notifier);
+#endif
