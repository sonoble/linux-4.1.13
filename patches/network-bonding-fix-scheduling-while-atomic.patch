The main change here is to move the call to bond_sysfs_slave_del() in
bond_release() outside an area that is under a bh-lock since
bond_sysfs_slave_del() may sleep trying to take a mutex.  The code in
bond_release() changed pretty dramatically between 3.2 and when the
upstream commit that added the sysfs slave info was added, so it was
easy to miss the fact that this call needed to be outside a bh-lock.  I
also added back an error cleanup in bond_enslave() that was missed in
the first patch.  We have probably never hit this, but it should be
there.

diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c
index d84b0b7..bc7b125 100644
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@ -2020,7 +2020,7 @@ int bond_enslave(struct net_device *bond_dev, struct net_device *slave_dev)
 	res = bond_sysfs_slave_add(new_slave);
 	if (res) {
 		pr_debug("Error %d calling bond_sysfs_slave_add\n", res);
-		goto err_dest_symlinks;
+		goto err_unregister;
 	}
 
 	pr_info("%s: enslaving %s as a%s interface with a%s link.\n",
@@ -2032,6 +2032,9 @@ int bond_enslave(struct net_device *bond_dev, struct net_device *slave_dev)
 	return 0;
 
 /* Undo stages on error */
+err_unregister:
+	netdev_rx_handler_unregister(slave_dev);
+
 err_dest_symlinks:
 	bond_destroy_slave_symlinks(bond_dev, slave_dev);
 
@@ -2112,10 +2115,14 @@ int bond_release(struct net_device *bond_dev, struct net_device *slave_dev)
 	}
 
 	write_unlock_bh(&bond->lock);
+
+	bond_sysfs_slave_del(slave);
+
 	/* unregister rx_handler early so bond_handle_frame wouldn't be called
 	 * for this slave anymore.
 	 */
 	netdev_rx_handler_unregister(slave_dev);
+
 	write_lock_bh(&bond->lock);
 
 	if (!bond->params.fail_over_mac) {
@@ -2144,8 +2151,6 @@ int bond_release(struct net_device *bond_dev, struct net_device *slave_dev)
 
 	bond->current_arp_slave = NULL;
 
-	/* release the slave from its bond */
-	bond_sysfs_slave_del(slave);
 	/* recompute stats just before removing the slave */
 	__bond_get_stats(bond->dev, &bond->bond_stats);
 
