Send 1 netlink message for a vlan with list of groups and router ports

diff --git a/net/bridge/br_mdb.c b/net/bridge/br_mdb.c
index 257e0f0..a049696 100644
--- a/net/bridge/br_mdb.c
+++ b/net/bridge/br_mdb.c
@@ -49,7 +49,7 @@ fail:
 }
 
 static int br_mdb_fill_info(struct sk_buff *skb, struct netlink_callback *cb,
-			    struct net_device *dev)
+			    struct net_device *dev, __u16 old_vid)
 {
 	struct net_bridge *br = netdev_priv(dev);
 	struct net_bridge_mdb_htable *mdb;
@@ -92,6 +92,13 @@ static int br_mdb_fill_info(struct sk_buff *skb, struct netlink_callback *cb,
 				if (port) {
 					struct br_mdb_entry e;
 					memset(&e, 0, sizeof(e));
+					if (old_vid == 0)
+						old_vid = p->addr.vid;
+					else if (old_vid != p->addr.vid) {
+						nla_nest_cancel(skb, nest2);
+						err = -EMSGSIZE;
+						goto out;
+					}
 					e.ifindex = port->dev->ifindex;
 					e.state = p->state;
 					if (p->addr.proto == htons(ETH_P_IP))
@@ -128,6 +135,7 @@ static int br_mdb_dump(struct sk_buff *skb, struct netlink_callback *cb)
 	struct net *net = sock_net(skb->sk);
 	struct nlmsghdr *nlh = NULL;
 	int idx = 0, s_idx;
+	__u16 old_vid = 0;
 
 	s_idx = cb->args[0];
 
@@ -152,7 +160,7 @@ static int br_mdb_dump(struct sk_buff *skb, struct netlink_callback *cb)
 			bpm = nlmsg_data(nlh);
 			memset(bpm, 0, sizeof(*bpm));
 			bpm->ifindex = dev->ifindex;
-			if (br_mdb_fill_info(skb, cb, dev) < 0)
+			if (br_mdb_fill_info(skb, cb, dev, old_vid) < 0)
 				goto out;
 			if (br_rports_fill_info(skb, cb, dev) < 0)
 				goto out;
