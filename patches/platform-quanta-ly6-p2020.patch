Quanta LY6 Support

diff --git a/arch/powerpc/boot/dts/quanta_ly6_p2020.dts b/arch/powerpc/boot/dts/quanta_ly6_p2020.dts
new file mode 100644
index 0000000..c82cec0
--- /dev/null
+++ b/arch/powerpc/boot/dts/quanta_ly6_p2020.dts
@@ -0,0 +1,804 @@
+/*
+ * Cumulus P2020 Device Tree Source
+ *
+ * Copyright 2012 Cumulus Networks, Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+/include/ "p2020si.dtsi"
+
+/ {
+	model = "quanta,ly6_p2020";
+	compatible = "quanta,ly6_p2020";
+
+	aliases {
+		ethernet0 = &enet1;
+		serial0 = &serial0;
+		serial1 = &serial1;
+		pci0 = &pci0;
+		pci1 = &pci1;
+		pci2 = &pci2;
+	};
+
+	memory {
+		device_type = "memory";
+	};
+
+	bcm_dma {
+		compatible = "early-dma-alloc";
+		// 64MB DMA region, aligned to 1MB
+		region_size = <0x04000000>;
+		alignment   = <0x00100000>;
+	};
+
+	mass_storage {
+		device = "mmcblk0";
+	};
+
+	localbus@ffe05000 {
+		compatible = "fsl,elbc", "simple-bus";
+		ranges = <0x0 0x0 0x0 0xec000000 0x04000000
+		          0x1 0x0 0x0 0xe8000000 0x04000000>;
+
+		nor@0,0 {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "cfi-flash";
+			reg = <0x0 0x0 0x04000000>;
+			bank-width = <2>;
+			partition@0 {
+				/* Entire flash minus (u-boot + onie) */
+				reg = <0x00000000 0x03b60000>;
+				label = "open";
+			};
+			partition@1 {
+				/* 4MB onie */
+				reg = <0x03b60000 0x00400000>;
+				label = "onie";
+			};
+			partition@2 {
+				/* 128KB, 1 sector */
+				reg = <0x03f60000 0x00020000>;
+				label = "uboot-env";
+				env_size = <0x2000>;
+			};
+			partition@3 {
+				/* 512KB u-boot */
+				reg = <0x03f80000 0x00080000>;
+				label = "uboot";
+			};
+		};
+
+		nor@1,0 {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "cfi-flash";
+			reg = <0x1 0x0 0x04000000>;
+			bank-width = <2>;
+			partition@0 {
+				reg = <0x00000000 0x04000000>;
+				label = "open2";
+			};
+		};
+	};
+
+	soc@ffe00000 {
+		i2c@3000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			cell-index = <0>;
+			compatible = "fsl-i2c";
+			reg = <0x3000 0x100>;
+			interrupts = <43 2>;
+			interrupt-parent = <&mpic>;
+			fsl,preserve-clocking;
+
+			/* Cypress PSOC fan and temp controller */
+			cypsoc: psoc@4e {
+				compatible = "CY8C3245R1";
+				reg = <0x4e>;
+				label = "Cypress PSOC";
+			};
+			rtc@68 {
+				compatible = "dallas,ds1339";
+				reg = <0x68>;
+			};
+			mux@71 {
+				compatible = "ti,pca9546";
+				reg = <0x71>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					pca9555@20 {
+						compatible = "nxp,pca9555";
+						reg = <0x20>;
+						label = "PCA9555_1";
+					};
+				};
+
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					board_eeprom@53 {
+						compatible = "at,24c02";
+						reg = <0x53>;
+						label = "board_eeprom";
+					};
+				};
+
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					pca9554@21 {
+						compatible = "nxp,pca9554";
+						reg = <0x21>;
+						label = "PCA9554_1";
+					};
+				};
+			};
+
+			mux@72 {
+				compatible = "ti,pca9546";
+				reg = <0x72>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					psu_eeprom@58 {
+						compatible = "at,24c02";
+						reg = <0x58>;
+						label = "psu1_eeprom";
+					};
+				};
+
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					psu_eeprom@59 {
+						compatible = "at,24c02";
+						reg = <0x59>;
+						label = "psu2_eeprom";
+					};
+				};
+
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					pca9555@26 {
+						compatible = "nxp,pca9555";
+						reg = <0x26>;
+						label = "PCA9555_PSU";
+					};
+				};
+
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					board_eeprom@54 {
+						compatible = "at,24c02";
+						reg = <0x54>;
+						label = "board_eeprom";
+					};
+				};
+			};
+
+			mux@77 {
+				compatible = "ti,pca9548";
+				reg = <0x77>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+
+					mux@73 {
+						compatible = "nxp,pca9548";
+						reg = <0x73>;
+						label = "QSFP 1-8 eeprom";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						deselect-on-exit;
+
+						/* QSFP 1 */
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port1";
+							};
+						};
+
+						/* QSFP 2 */
+						i2c@1 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <1>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port2";
+							};
+						};
+
+						/* QSFP 3 */
+						i2c@2 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <2>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port3";
+							};
+						};
+
+
+						/* QSFP 4 */
+						i2c@3 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <3>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port4";
+							};
+						};
+
+
+						/* QSFP 5 */
+						i2c@4 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <4>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port5";
+							};
+						};
+
+						/* QSFP 6 */
+						i2c@5 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <5>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port6";
+							};
+						};
+
+						/* QSFP 7 */
+						i2c@6 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <6>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port7";
+							};
+						};
+
+						/* QSFP 8 */
+						i2c@7 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <7>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port8";
+							};
+						};
+
+					};
+				};
+
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					mux@74 {
+						compatible = "nxp,pca9548";
+						reg = <0x74>;
+						label = "QSFP 9-16 eeprom";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						deselect-on-exit;
+
+						/* QSFP 9 */
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port9";
+							};
+						};
+
+						/* QSFP 10 */
+						i2c@1 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <1>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port10";
+							};
+						};
+
+						/* QSFP 11 */
+						i2c@2 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <2>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port11";
+							};
+						};
+
+						/* QSFP 12 */
+						i2c@3 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <3>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port12";
+							};
+						};
+
+						/* QSFP 13 */
+						i2c@4 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <4>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port13";
+							};
+						};
+
+						/* QSFP 14 */
+						i2c@5 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <5>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port14";
+							};
+						};
+
+						/* QSFP 15 */
+						i2c@6 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <6>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port15";
+							};
+						};
+
+						/* QSFP 16 */
+						i2c@7 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <7>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port16";
+							};
+						};
+
+					};
+				};
+
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					mux@75 {
+						compatible = "nxp,pca9548";
+						reg = <0x75>;
+						label = "QSFP 17-24 eeprom";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						deselect-on-exit;
+
+						/* QSFP 17 */
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port17";
+							};
+						};
+
+						/* QSFP 18 */
+						i2c@1 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <1>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port18";
+							};
+						};
+
+						/* QSFP 19 */
+						i2c@2 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <2>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port19";
+							};
+						};
+
+						/* QSFP 20 */
+						i2c@3 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <3>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port20";
+							};
+						};
+
+						/* QSFP 21 */
+						i2c@4 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <4>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port21";
+							};
+						};
+
+						/* QSFP 22 */
+						i2c@5 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <5>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port22";
+							};
+						};
+
+						/* QSFP 23 */
+						i2c@6 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <6>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port23";
+							};
+						};
+
+						/* QSFP 24 */
+						i2c@7 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <7>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port24";
+							};
+						};
+
+					};
+				};
+
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					mux@76 {
+						compatible = "nxp,pca9548";
+						reg = <0x76>;
+						label = "QSFP 25-32 eeprom";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						deselect-on-exit;
+
+						/* QSFP 25 */
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port25";
+							};
+						};
+
+						/* QSFP 26 */
+						i2c@1 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <1>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port26";
+							};
+						};
+
+						/* QSFP 27 */
+						i2c@2 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <2>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port27";
+							};
+						};
+
+						/* QSFP 28 */
+						i2c@3 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <3>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port28";
+							};
+						};
+
+						/* QSFP 29 */
+						i2c@4 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <4>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port29";
+							};
+						};
+
+						/* QSFP 30 */
+						i2c@5 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <5>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port30";
+							};
+						};
+
+						/* QSFP 31 */
+						i2c@6 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <6>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port31";
+							};
+						};
+
+						/* QSFP 32 */
+						i2c@7 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <7>;
+							sfp_eeprom@50 {
+								compatible = "sff8436";
+								reg = <0x50>;
+								label = "port32";
+							};
+						};
+
+					};
+				};
+				i2c@4 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <4>;
+					cpld_i2c@3A {
+						compatible = "quanta,ly6_p2020_cpld";
+						reg = <0x3A>;
+						label = "cpld_1_16";
+					};
+				};
+				i2c@5 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <5>;
+					cpld_i2c@3B {
+						compatible = "quanta,ly6_p2020_cpld";
+						reg = <0x3B>;
+						label = "cpld_17_32";
+					};
+				};
+				i2c@6 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <6>;
+					pca9555@24 {
+						compatible = "nxp,pca9555";
+						reg = <0x24>;
+						label = "pca9555_3";
+					};
+				};
+
+				i2c@7 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <7>;
+					pca9555@23 {
+						compatible = "nxp,pca9555";
+						reg = <0x23>;
+						label = "pca9555_4";
+					};
+				};
+			};
+		};
+
+		i2c@3100 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			cell-index = <1>;
+			compatible = "fsl-i2c";
+			reg = <0x3100 0x100>;
+			interrupts = <43 2>;
+			interrupt-parent = <&mpic>;
+			fsl,preserve-clocking;
+		};
+
+		usb@22000 {
+			dr_mode = "host";
+			phy_type = "ulpi";
+		};
+
+		serial1: serial@4600 {
+			status = "disabled";
+		};
+
+		mdio@24520 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "fsl,gianfar-mdio";
+			reg = <0x24520 0x20>;
+			phy0: ethernet-phy@5 {
+				reg = <0x5>;
+				device_type = "ethernet-phy";
+			};
+		};
+
+		mdio1: mdio@25520 {
+			#address-cells = <0x1>;
+			#size-cells = <0x0>;
+			compatible = "fsl,gianfar-tbi";
+			reg = <0x25520 0x20>;
+			tbi0: tbi-phy@11 {
+				reg = <0x11>;
+				device_type = "tbi-phy";
+			};
+		};
+
+		enet0: ethernet@24000 {
+			status = "disabled";
+		};
+
+		enet1: ethernet@25000 {
+			#address-cells = <0x1>;
+			#size-cells = <0x1>;
+			cell-index = <0x1>;
+			device_type = "network";
+			model = "eTSEC";
+			compatible = "gianfar";
+			reg = <0x25000 0x1000>;
+			ranges = <0x0 0x25000 0x1000>;
+			interrupts = <
+					0x23 0x2
+					0x24 0x2
+					0x28 0x2>;
+			interrupt-parent = <&mpic>;
+			tbi-handle = <&tbi0>;
+			phy-handle = <&phy0>;
+			phy-connection-type = "sgmii";
+		};
+
+		enet2: ethernet@26000 {
+			status = "disabled";
+		};
+	};
+
+	pci0: pcie@ffe08000 {
+			status = "disabled";
+	};
+
+	pci1: pcie@ffe09000 {
+		status = "disabled";
+	};
+
+	pci2: pcie@ffe0a000 {
+		ranges = <0x2000000 0x0 0xc0000000 0 0xc0000000 0x0 0x20000000
+			  0x1000000 0x0 0x00000000 0 0xffc20000 0x0 0x10000>;
+		interrupt-map-mask = <0xf800 0x0 0x0 0x7>;
+		interrupt-map = <
+			/* IDSEL 0x0 */
+			0000 0x0 0x0 0x1 &mpic 0x0 0x1
+			0000 0x0 0x0 0x2 &mpic 0x1 0x1
+			0000 0x0 0x0 0x3 &mpic 0x2 0x1
+			0000 0x0 0x0 0x4 &mpic 0x3 0x1
+			>;
+
+		pcie@0 {
+			reg = <0x0 0x0 0x0 0x0 0x0>;
+			#size-cells = <2>;
+			#address-cells = <3>;
+			device_type = "pci";
+			ranges = <0x2000000 0x0 0xc0000000
+				  0x2000000 0x0 0xc0000000
+				  0x0 0x20000000
+
+				  0x1000000 0x0 0x0
+				  0x1000000 0x0 0x0
+				  0x0 0x10000>;
+		};
+	};
+};
diff --git a/arch/powerpc/platforms/85xx/quanta_ly6_p2020.c b/arch/powerpc/platforms/85xx/quanta_ly6_p2020.c
new file mode 100644
index 0000000..d90e06c
--- /dev/null
+++ b/arch/powerpc/platforms/85xx/quanta_ly6_p2020.c
@@ -0,0 +1,206 @@
+/*
+ * Copyright 2013 Cumulus Networks, Inc.
+ *
+ * LY6 setup and early boot code.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/stddef.h>
+#include <linux/kernel.h>
+#include <linux/pci.h>
+#include <linux/kdev_t.h>
+#include <linux/delay.h>
+#include <linux/seq_file.h>
+#include <linux/interrupt.h>
+#include <linux/of_platform.h>
+#include <linux/i2c.h>
+#include <linux/of_i2c.h>
+#include <linux/early_dma_alloc.h>
+
+#include <asm/system.h>
+#include <asm/time.h>
+#include <asm/machdep.h>
+#include <asm/pci-bridge.h>
+#include <mm/mmu_decl.h>
+#include <asm/prom.h>
+#include <asm/udbg.h>
+#include <asm/mpic.h>
+
+#include <sysdev/fsl_soc.h>
+#include <sysdev/fsl_pci.h>
+
+#undef DEBUG
+
+#ifdef DEBUG
+#define DBG(fmt, args...) printk(KERN_ERR "%s: " fmt, __func__, ## args)
+#else
+#define DBG(fmt, args...)
+#endif
+
+/*******************************************************************************
+ *
+ * Platform initialization functions
+ *
+ *******************************************************************************
+*/
+
+/*
+ * Initialize the interrupt controller
+ */
+static void __init quanta_ly6_pic_init(void)
+{
+	struct mpic *mpic;
+	struct resource r;
+	struct device_node *np;
+
+	np = of_find_node_by_type(NULL, "open-pic");
+	if (np == NULL) {
+		printk(KERN_ERR "Could not find open-pic node\n");
+		return;
+	}
+
+	if (of_address_to_resource(np, 0, &r)) {
+		printk(KERN_ERR "Failed to map mpic register space\n");
+		of_node_put(np);
+		return;
+	}
+
+	mpic = mpic_alloc(np, r.start,
+		  MPIC_PRIMARY | MPIC_WANTS_RESET |
+		  MPIC_BIG_ENDIAN | MPIC_BROKEN_FRR_NIRQS |
+		  MPIC_SINGLE_DEST_CPU,
+		  0, 256, " OpenPIC  ");
+
+	BUG_ON(mpic == NULL);
+	of_node_put(np);
+
+	mpic_init(mpic);
+}
+
+/*
+ * Setup the architecture
+ */
+#ifdef CONFIG_SMP
+extern void __init mpc85xx_smp_init(void);
+#endif
+
+static void __init quanta_ly6_setup_arch(void)
+{
+	struct device_node *cpu;
+	const unsigned int *fp;
+#ifdef CONFIG_PCI
+	struct device_node *np;
+#endif
+
+	if (ppc_md.progress)
+		ppc_md.progress("quanta_ly6_setup_arch()", 0);
+
+	cpu = of_find_node_by_type(NULL, "cpu");
+	if (cpu != 0) {
+		fp = of_get_property(cpu, "clock-frequency", NULL);
+		if (fp != 0)
+			loops_per_jiffy = *fp / HZ;
+		else
+			loops_per_jiffy = 500000000 / HZ;
+		of_node_put(cpu);
+	}
+
+#ifdef CONFIG_PCI
+	for_each_node_by_type(np, "pci") {
+		if (of_device_is_compatible(np, "fsl,mpc8548-pcie"))
+			fsl_add_bridge(np, 0);
+	}
+#endif
+
+#ifdef CONFIG_SMP
+	mpc85xx_smp_init();
+#endif
+
+#ifdef CONFIG_EARLY_DMA_ALLOC
+	eda_init();
+#endif
+
+	printk(KERN_INFO "Quanta LY6 from Quanta Computer, Inc.\n");
+}
+
+
+
+static struct of_device_id __initdata quanta_ly6_ids[] = {
+	{ .type = "soc", },
+	{ .compatible = "soc", },
+	{ .compatible = "simple-bus", },
+	{ .compatible = "gianfar", },
+	{},
+};
+
+
+
+static int __init quanta_ly6_publish_devices(void)
+{
+	return of_platform_bus_probe(NULL, quanta_ly6_ids, NULL);
+}
+machine_device_initcall(quanta_ly6, quanta_ly6_publish_devices);
+
+
+
+static void quanta_ly6_show_cpuinfo(struct seq_file *m)
+{
+	uint pvid, svid, phid1;
+	uint memsize = total_memory;
+
+	pvid = mfspr(SPRN_PVR);
+	svid = mfspr(SPRN_SVR);
+
+	seq_printf(m, "Vendor\t\t: Freescale Semiconductor\n");
+	seq_printf(m, "PVR\t\t: 0x%x\n", pvid);
+	seq_printf(m, "SVR\t\t: 0x%x\n", svid);
+
+	/* Display cpu PLL setting */
+	phid1 = mfspr(SPRN_HID1);
+	seq_printf(m, "PLL setting\t: 0x%x\n", ((phid1 >> 24) & 0x3f));
+
+	/* Display the amount of memory */
+	seq_printf(m, "Memory\t\t: %d MB\n", memsize / (1024 * 1024));
+}
+
+
+/*
+ * Called very early, device-tree isn't unflattened
+ */
+static int __init quanta_ly6_probe(void)
+{
+	unsigned long root = of_get_flat_dt_root();
+
+	if (of_flat_dt_is_compatible(root, "quanta,ly6_p2020"))
+		return 1;
+
+	return 0;
+}
+
+void quanta_ly6_restart(char *cmd)
+{
+	// asserts HRESET_REQ which will work on new hardware
+	printk(KERN_INFO "HRESET_REQ\n");
+	fsl_rstcr_restart(cmd);
+}
+
+
+define_machine(quanta_ly6) {
+	.name		= "Quanta Computer, Inc. LY6, P2020",
+	.probe		= quanta_ly6_probe,
+	.setup_arch	= quanta_ly6_setup_arch,
+	.init_IRQ	= quanta_ly6_pic_init,
+	.show_cpuinfo	= quanta_ly6_show_cpuinfo,
+#ifdef CONFIG_PCI
+	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
+#endif
+	.get_irq	= mpic_get_irq,
+	.power_save	= e500_idle,
+	.restart	= quanta_ly6_restart,
+	.calibrate_decr = generic_calibrate_decr,
+	.progress	= udbg_progress,
+};
