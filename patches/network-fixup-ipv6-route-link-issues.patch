net: fix ipv6 link issues

This honors the sysctl config option kill_routes_on_linkdown and also
make sure that a route can be properly added on an interface when the
link is down, but will not use that interface/route for forwarding.

diff --git a/net/ipv6/addrconf.c b/net/ipv6/addrconf.c
index 017795c..96b5a74 100644
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@ -2660,13 +2660,15 @@ static int addrconf_notify(struct notifier_block *this, unsigned long event,
 		} else {
 			if (!addrconf_qdisc_ok(dev)) {
 				/* device is still not ready. */
-				rt6_link_change(dev_net(dev), dev);
+				if (kill_routes_on_linkdown)
+					rt6_link_change(dev_net(dev), dev);
 				break;
 			}
 
 			if (idev) {
 				if (idev->if_flags & IF_READY) {
-					rt6_link_change(dev_net(dev), dev);
+					if (kill_routes_on_linkdown)
+						rt6_link_change(dev_net(dev), dev);
 					/* device is already configured. */
 					break;
 				}
diff --git a/net/ipv6/route.c b/net/ipv6/route.c
index e9309c5..4cdf821 100644
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@ -406,9 +406,6 @@ static inline struct rt6_info *rt6_device_match(struct net *net,
 	for (sprt = rt; sprt; sprt = sprt->dst.rt6_next) {
 		struct net_device *dev = sprt->rt6i_dev;
 
-		if (!netif_carrier_ok(dev))
-			continue;
-
 		if (oif) {
 			if (dev->ifindex == oif)
 				return sprt;
@@ -573,14 +570,15 @@ static struct rt6_info *find_rr_leaf(struct fib6_node *fn,
 
 	match = NULL;
 	for (rt = rr_head; rt && rt->rt6i_metric == metric;
-	     rt = rt->dst.rt6_next)
-		if (netif_carrier_ok(rt->rt6i_dev))
+	     rt = rt->dst.rt6_next) {
+		if (netif_carrier_ok(rt->rt6i_dev) || !kill_routes_on_linkdown)
 			match = find_match(rt, oif, strict, &mpri, match);
+	}
 	for (rt = fn->leaf; rt && rt != rr_head && rt->rt6i_metric == metric;
-	     rt = rt->dst.rt6_next)
-		if (netif_carrier_ok(rt->rt6i_dev))
+	     rt = rt->dst.rt6_next) {
+		if (netif_carrier_ok(rt->rt6i_dev) || !kill_routes_on_linkdown)
 			match = find_match(rt, oif, strict, &mpri, match);
-
+	}
 	return match;
 }
 
@@ -2595,7 +2593,7 @@ static int rt6_fill_node(struct net *net,
 	if (rt->rt6i_flags&RTF_CACHE)
 		rtm->rtm_flags |= RTM_F_CLONED;
 
-	if (rt->rt6i_dev && !netif_carrier_ok(rt->rt6i_dev))
+	if (rt->rt6i_dev && !netif_carrier_ok(rt->rt6i_dev) && kill_routes_on_linkdown)
 		rtm->rtm_flags |= RTNH_F_DEAD;
 	if (dst) {
 		NLA_PUT(skb, RTA_DST, 16, dst);
