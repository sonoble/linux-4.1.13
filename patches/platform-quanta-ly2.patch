Quanta LY2 Support

diff --git a/arch/powerpc/boot/dts/quanta_ly2.dts b/arch/powerpc/boot/dts/quanta_ly2.dts
new file mode 100644
index 0000000..80fd639
--- /dev/null
+++ b/arch/powerpc/boot/dts/quanta_ly2.dts
@@ -0,0 +1,859 @@
+/*
+ * Cumulus P2020 Device Tree Source
+ *
+ * Copyright 2012 Cumulus Networks, Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+/include/ "p2020si.dtsi"
+
+/ {
+	model = "quanta,ly2";
+	compatible = "quanta,ly2";
+
+	aliases {
+		ethernet0 = &enet0;
+		ethernet1 = &enet1;
+		ethernet2 = &enet2;
+		serial0 = &serial0;
+		serial1 = &serial1;
+		pci0 = &pci0;
+		pci1 = &pci1;
+		pci2 = &pci2;
+	};
+
+	memory {
+		device_type = "memory";
+	};
+
+	bcm_dma {
+		compatible = "early-dma-alloc";
+		// 64MB DMA region, aligned to 1MB
+		region_size = <0x04000000>;
+		alignment   = <0x00100000>;
+	};
+
+	mass_storage {
+		device = "mmcblk0";
+	};
+
+	localbus@ffe05000 {
+		compatible = "fsl,elbc", "simple-bus";
+		ranges = <0x0 0x0 0x0 0xee000000 0x02000000
+		          0x1 0x0 0x0 0xec000000 0x02000000>;
+
+		nor@0,0 {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "cfi-flash";
+			reg = <0x0 0x0 0x02000000>;
+			bank-width = <2>;
+			partition@0 {
+				/* Entire flash minus (u-boot + onie) */
+				reg = <0x00000000 0x01b60000>;
+				label = "open";
+			};
+			partition@1 {
+				/* 4MB onie */
+				reg = <0x01b60000 0x00400000>;
+				label = "onie";
+			};
+			partition@2 {
+				/* 128KB, 1 sector */
+				reg = <0x01f60000 0x00020000>;
+				label = "uboot-env";
+				env_size = <0x2000>;
+			};
+			partition@3 {
+				/* 512KB u-boot */
+				reg = <0x01f80000 0x00080000>;
+				label = "uboot";
+			};
+		};
+
+		nor@1,0 {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "cfi-flash";
+			reg = <0x1 0x0 0x02000000>;
+			bank-width = <2>;
+			partition@0 {
+				reg = <0x00000000 0x02000000>;
+				label = "not-used";
+			};
+                };
+	};
+
+	soc@ffe00000 {
+		I2C0: i2c@3000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			fsl,preserve-clocking;
+			rtc@68 {
+				compatible = "dallas,ds1339";
+				reg = <0x68>;
+			};
+
+			mux@71 {
+				compatible = "ti,pca9546";
+				reg = <0x71>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					/*
+					** The eeprom utilities look for a label that
+					** ends with "_eeprom".
+					*/
+					board_eeprom@54 {
+						compatible = "at,24c02";
+						reg = <0x54>;
+						label = "board_eeprom";
+					};
+				};
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					/* Cypress PSOC fan and temp controller */
+					cypsoc: psoc@2e {
+						compatible = "CY8C3245";
+						reg = <0x2e>;
+						label = "Cypress PSOC";
+					};
+				};
+			};
+
+			mux@75 {
+				compatible = "ti,pca9546";
+				reg = <0x75>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					psu1: psu@58 {
+						compatible = "at,24c02";
+						reg = <0x58>;
+						label = "Redundant PSU 1";
+					};
+				};
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					psu2: psu@59 {
+						compatible = "at,24c02";
+						reg = <0x59>;
+						label = "Redundant PSU 2";
+					};
+				};
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					pca9555@24 {
+						compatible = "nxp,pca9555";
+						reg = <0x24>;
+						label = "PSU  Status 1";
+					};
+				};
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					pca9555@25 {
+						compatible = "nxp,pca9555";
+						reg = <0x25>;
+						label = "PSU  Status 2";
+					};
+				};
+			};
+		};
+
+		I2C1: i2c@3100 {
+			device_type = "i2c";
+			compatible = "fsl-i2c";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0x3100 0x100>;
+			cell-index = <1>;
+			interrupt-parent = <&mpic>;
+			interrupts = <43 2>;
+			fsl,preserve-clocking;
+/* quanta I2C mux CPLD for SFP+ on ports 1-16 */
+			mux@25 {
+				compatible = "cumulus,quanta-i2cmux";
+				reg = <0x25>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				// SFP+ 1
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port1";
+					};
+				};
+				// SFP+ 2
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port2";
+					};
+				};
+				// SFP+ 3
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port3";
+					};
+				};
+				// SFP+ 4
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port4";
+					};
+				};
+				// SFP+ 5
+				i2c@4 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <4>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port5";
+					};
+				};
+				// SFP+ 6
+				i2c@5 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <5>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port6";
+					};
+				};
+				// SFP+ 7
+				i2c@6 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <6>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port7";
+					};
+				};
+				// SFP+ 8
+				i2c@7 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <7>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port8";
+					};
+				};
+				// SFP+ 9
+				i2c@8 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <8>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port9";
+					};
+				};
+				// SFP+ 10
+				i2c@9 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <9>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port10";
+					};
+				};
+				// SFP+ 11
+				i2c@10 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <10>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port11";
+					};
+				};
+				// SFP+ 12
+				i2c@11 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <11>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port12";
+					};
+				};
+				// SFP+ 13
+				i2c@12 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <12>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port13";
+					};
+				};
+				// SFP+ 14
+				i2c@13 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <13>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port14";
+					};
+				};
+				// SFP+ 15
+				i2c@14 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <14>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port15";
+					};
+				};
+				// SFP+ 16
+				i2c@15 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <15>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port16";
+					};
+				};
+			};
+/* quanta I2C mux CPLD for SFP+ on ports 17-32 */
+			mux@26 {
+				compatible = "cumulus,quanta-i2cmux";
+				reg = <0x26>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				// SFP+ 17
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port17";
+					};
+				};
+				// SFP+ 18
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port18";
+					};
+				};
+				// SFP+ 19
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port19";
+					};
+				};
+				// SFP+ 20
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port20";
+					};
+				};
+				// SFP+ 21
+				i2c@4 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <4>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port21";
+					};
+				};
+				// SFP+ 22
+				i2c@5 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <5>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port22";
+					};
+				};
+				// SFP+ 23
+				i2c@6 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <6>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port23";
+					};
+				};
+				// SFP+ 24
+				i2c@7 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <7>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port24";
+					};
+				};
+				// SFP+ 25
+				i2c@8 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <8>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port25";
+					};
+				};
+				// SFP+ 26
+				i2c@9 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <9>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port26";
+					};
+				};
+				// SFP+ 27
+				i2c@10 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <10>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port27";
+					};
+				};
+				// SFP+ 28
+				i2c@11 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <11>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port28";
+					};
+				};
+				// SFP+ 29
+				i2c@12 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <12>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port29";
+					};
+				};
+				// SFP+ 30
+				i2c@13 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <13>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port30";
+					};
+				};
+				// SFP+ 31
+				i2c@14 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <14>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port31";
+					};
+				};
+				// SFP+ 32
+				i2c@15 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <15>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port32";
+					};
+				};
+			};
+/* quanta I2C mux CPLD for SFP+ on ports 33-48 */
+			mux@27 {
+				compatible = "cumulus,quanta-i2cmux";
+				reg = <0x27>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				// SFP+ 33
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port33";
+					};
+				};
+				// SFP+ 34
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port34";
+					};
+				};
+				// SFP+ 35
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port35";
+					};
+				};
+				// SFP+ 36
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port36";
+					};
+				};
+				// SFP+ 37
+				i2c@4 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <4>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port37";
+					};
+				};
+				// SFP+ 38
+				i2c@5 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <5>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port38";
+					};
+				};
+				// SFP+ 39
+				i2c@6 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <6>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port39";
+					};
+				};
+				// SFP+ 40
+				i2c@7 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <7>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port40";
+					};
+				};
+				// SFP+ 41
+				i2c@8 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <8>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port41";
+					};
+				};
+				// SFP+ 42
+				i2c@9 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <9>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port42";
+					};
+				};
+				// SFP+ 43
+				i2c@10 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <10>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port43";
+					};
+				};
+				// SFP+ 44
+				i2c@11 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <11>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port44";
+					};
+				};
+				// SFP+ 45
+				i2c@12 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <12>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port45";
+					};
+				};
+				// SFP+ 46
+				i2c@13 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <13>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port46";
+					};
+				};
+				// SFP+ 47
+				i2c@14 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <14>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port47";
+					};
+				};
+				// SFP+ 48
+				i2c@15 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <15>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port48";
+					};
+				};
+			};
+
+			mux@73 {
+				compatible = "ti,pca9546";
+				reg = <0x73>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				// QSFP+ 1
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port49";
+					};
+				};
+				// QSFP+ 2
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port50";
+					};
+				};
+				// QSFP+ 3
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port51";
+					};
+				};
+				// QSFP+ 4
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					sfp_eeprom@50 {
+						compatible = "at,24c04";
+						reg = <0x50>;
+						label = "port52";
+					};
+				};
+			};
+		};
+
+		usb@22000 {
+			status = "disabled";
+		};
+
+		mdio@24520 {
+			phy0: ethernet-phy@1 {
+				interrupt-parent = <&mpic>;
+				interrupts = <3 1>;
+				reg = <0x1>;
+			};
+		};
+
+		enet0: ethernet@24000 {
+			phy-handle = <&phy0>;
+			phy-connection-type = "sgmii";
+		};
+
+		enet1: ethernet@25000 {
+			status = "disabled";
+		};
+
+		enet2: ethernet@26000 {
+			status = "disabled";
+		};
+	};
+
+	pci0: pcie@ffe08000 {
+                status = "disabled";
+	};
+
+	pci1: pcie@ffe09000 {
+		status = "disabled";
+	};
+
+	pci2: pcie@ffe0a000 {
+		ranges = <0x2000000 0x0 0xc0000000 0 0xc0000000 0x0 0x20000000
+			  0x1000000 0x0 0x00000000 0 0xffc20000 0x0 0x10000>;
+		interrupt-map-mask = <0xf800 0x0 0x0 0x7>;
+		interrupt-map = <
+			/* IDSEL 0x0 */
+			0000 0x0 0x0 0x1 &mpic 0x0 0x1
+			0000 0x0 0x0 0x2 &mpic 0x1 0x1
+			0000 0x0 0x0 0x3 &mpic 0x2 0x1
+			0000 0x0 0x0 0x4 &mpic 0x3 0x1
+			>;
+
+		pcie@0 {
+			reg = <0x0 0x0 0x0 0x0 0x0>;
+			#size-cells = <2>;
+			#address-cells = <3>;
+			device_type = "pci";
+			ranges = <0x2000000 0x0 0xc0000000
+				  0x2000000 0x0 0xc0000000
+				  0x0 0x20000000
+
+				  0x1000000 0x0 0x0
+				  0x1000000 0x0 0x0
+				  0x0 0x10000>;
+		};
+	};
+};
diff --git a/arch/powerpc/boot/dts/quanta_ly2r.dts b/arch/powerpc/boot/dts/quanta_ly2r.dts
new file mode 100644
index 0000000..1bb78ec
--- /dev/null
+++ b/arch/powerpc/boot/dts/quanta_ly2r.dts
@@ -0,0 +1,656 @@
+/*
+ * Quanta LY2R Device Tree Source
+ *
+ * Copyright 2014 Cumulus Networks, Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+/include/ "p2020si.dtsi"
+
+/ {
+	model = "quanta,ly2r";
+	compatible = "quanta,ly2r";
+
+	aliases {
+		ethernet0 = &enet0;
+		ethernet1 = &enet1;
+		ethernet2 = &enet2;
+		serial0 = &serial0;
+		serial1 = &serial1;
+		pci0 = &pci0;
+		pci1 = &pci1;
+		pci2 = &pci2;
+	};
+
+	memory {
+		device_type = "memory";
+	};
+
+	bcm_dma {
+		compatible = "early-dma-alloc";
+		// 64MB DMA region, aligned to 1MB
+		region_size = <0x04000000>;
+		alignment   = <0x00100000>;
+	};
+
+	mass_storage {
+		device = "mmcblk0";
+	};
+
+	localbus@ffe05000 {
+		compatible = "fsl,elbc", "simple-bus";
+		ranges = <0x0 0x0 0x0 0xec000000 0x04000000
+		          0x1 0x0 0x0 0xe8000000 0x04000000>;
+
+		nor@0,0 {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "cfi-flash";
+			reg = <0x0 0x0 0x04000000>;
+			bank-width = <2>;
+			partition@0 {
+				/* Entire flash minus (u-boot + onie) */
+				reg = <0x00000000 0x03b60000>;
+				label = "open";
+			};
+			partition@1 {
+				/* 4MB onie */
+				reg = <0x03b60000 0x00400000>;
+				label = "onie";
+			};
+			partition@2 {
+				/* 128KB, 1 sector */
+				reg = <0x03f60000 0x00020000>;
+				label = "uboot-env";
+				env_size = <0x2000>;
+			};
+			partition@3 {
+				/* 512KB u-boot */
+				reg = <0x03f80000 0x00080000>;
+				label = "uboot";
+			};
+		};
+
+		nor@1,0 {
+			#address-cells = <1>;
+			#size-cells = <1>;
+			compatible = "cfi-flash";
+			reg = <0x1 0x0 0x04000000>;
+			bank-width = <2>;
+			partition@0 {
+				reg = <0x00000000 0x04000000>;
+				label = "open2";
+			};
+		};
+	};
+
+	soc@ffe00000 {
+		i2c@3000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			cell-index = <0>;
+			compatible = "fsl-i2c";
+			reg = <0x3000 0x100>;
+			interrupts = <43 2>;
+			interrupt-parent = <&mpic>;
+			fsl,preserve-clocking;
+
+			rtc@68 {
+				compatible = "dallas,ds1338";
+				reg = <0x68>;
+			};
+			board_eeprom@54 {
+				compatible = "at,24c02";
+				reg = <0x54>;
+				label = "board_eeprom";
+			};
+			/* Cypress PSOC fan and temp controller */
+			cypsoc: psoc@2e {
+				compatible = "CY8C3245";
+				reg = <0x2e>;
+				label = "Cypress PSOC";
+			};
+			pca9555@26 {
+				compatible = "nxp,pca9555";
+				reg = <0x26>;
+				label = "Fan Status and CPLD";
+			};
+			mux@75 {
+				compatible = "ti,pca9546";
+				reg = <0x75>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					psu1: psu@58 {
+						compatible = "at,24c02";
+						reg = <0x58>;
+						label = "Redundant PSU 1";
+					};
+				};
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					psu2: psu@59 {
+						compatible = "at,24c02";
+						reg = <0x59>;
+						label = "Redundant PSU 2";
+					};
+				};
+				i2c@2 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <2>;
+					pca9555@24 {
+						compatible = "nxp,pca9555";
+						reg = <0x24>;
+						label = "PSU  Control 1";
+					};
+				};
+				i2c@3 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <3>;
+					pca9555@25 {
+						compatible = "nxp,pca9555";
+						reg = <0x25>;
+						label = "PSU  Control 2";
+					};
+				};
+			};
+		};
+
+		i2c@3100 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			cell-index = <1>;
+			compatible = "fsl-i2c";
+			reg = <0x3100 0x100>;
+			interrupts = <43 2>;
+			interrupt-parent = <&mpic>;
+			fsl,preserve-clocking;
+			pca9698@21 {
+				compatible = "nxp,pca9698";
+				reg = <0x21>;
+				label = "QSFP+ I/O Expander";
+			};
+			mux@72 {
+				compatible = "ti,pca9546";
+				reg = <0x72>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				deselect-on-exit;
+
+				i2c@0 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0>;
+					mux@38 {
+						compatible = "cumulus,quanta-i2cmux";
+						reg = <0x38>;
+						label = "CPLD 1, I2C expander SFP+ 1-32";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						i2c@16{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <16>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port17";
+							};
+						};
+						i2c@17{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <17>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port18";
+							};
+						};
+						i2c@18{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <18>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port19";
+							};
+						};
+						i2c@19{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <19>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port20";
+							};
+						};
+						i2c@20{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <20>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port21";
+							};
+						};
+						i2c@21{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <21>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port22";
+							};
+						};
+						i2c@22{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <22>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port23";
+							};
+						};
+						i2c@23{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <23>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port24";
+							};
+						};
+						i2c@24{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <24>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port25";
+							};
+						};
+						i2c@25{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <25>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port26";
+							};
+						};
+						i2c@26{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <26>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port27";
+							};
+						};
+						i2c@27{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <27>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port28";
+							};
+						};
+						i2c@28{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <28>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port29";
+							};
+						};
+						i2c@29{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <29>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port30";
+							};
+						};
+						i2c@30{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <30>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port31";
+							};
+						};
+						i2c@31{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <31>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port32";
+							};
+						};
+					};
+					mux@39 {
+						compatible = "cumulus,quanta-i2cmux";
+						reg = <0x39>;
+						label = "CPLD 2, I2C expander SFP+ 33-48";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						// SFP+ 33
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port33";
+							};
+						};
+					};
+				};
+				i2c@1 {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <1>;
+					mux@3A {
+						compatible = "cumulus,quanta-i2cmux";
+						reg = <0x3A>;
+						label = "CPLD 3, IO expander SFP+ 1-16";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						// SFP+ 1
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port1";
+							};
+						};
+						i2c@1{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <1>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port2";
+							};
+						};
+						i2c@2{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <2>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port3";
+							};
+						};
+						i2c@3{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <3>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port4";
+							};
+						};
+						i2c@4{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <4>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port5";
+							};
+						};
+						i2c@5{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <5>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port6";
+							};
+						};
+						i2c@6{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <6>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port7";
+							};
+						};
+						i2c@7{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <7>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port8";
+							};
+						};
+						i2c@8{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <8>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port9";
+							};
+						};
+						i2c@9{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <9>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port10";
+							};
+						};
+						i2c@10{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <10>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port11";
+							};
+						};
+						i2c@11{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <11>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port12";
+							};
+						};
+						i2c@12{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <12>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port13";
+							};
+						};
+						i2c@13{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <13>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port14";
+							};
+						};
+						i2c@14{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <14>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port15";
+							};
+						};
+						i2c@15{
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <15>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+								label = "port16";
+							};
+						};
+					};
+					mux@3B {
+						compatible = "cumulus,quanta-i2cmux";
+						reg = <0x3B>;
+						label = "CPLD 4, IO expander SFP+ 17-32";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						// SFP+ 1
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+							};
+						};
+					};
+					mux@3C {
+						compatible = "cumulus,quanta-i2cmux";
+						reg = <0x3C>;
+						label = "CPLD 5, IO expander SFP+ 33-48";
+						#address-cells = <1>;
+						#size-cells = <0>;
+						// SFP+ 1
+						i2c@0 {
+							#address-cells = <1>;
+							#size-cells = <0>;
+							reg = <0>;
+							sfp_eeprom@50 {
+								compatible = "at,24c04";
+								reg = <0x50>;
+							};
+						};
+					};
+				};
+			};
+		};
+
+		usb@22000 {
+			dr_mode = "host";
+			phy_type = "ulpi";
+		};
+
+		serial1: serial@4600 {
+			status = "disabled";
+		};
+
+		mdio@24520 {
+			phy0: ethernet-phy@1 {
+				reg = <0x1>;
+			};
+		};
+
+		enet0: ethernet@24000 {
+			phy-handle = <&phy0>;
+			phy-connection-type = "sgmii";
+		};
+
+		enet1: ethernet@25000 {
+			status = "disabled";
+		};
+
+		enet2: ethernet@26000 {
+			status = "disabled";
+		};
+	};
+
+	pci0: pcie@ffe08000 {
+                status = "disabled";
+	};
+
+	pci1: pcie@ffe09000 {
+		status = "disabled";
+	};
+
+	pci2: pcie@ffe0a000 {
+		ranges = <0x2000000 0x0 0xc0000000 0 0xc0000000 0x0 0x20000000
+			  0x1000000 0x0 0x00000000 0 0xffc20000 0x0 0x10000>;
+		interrupt-map-mask = <0xf800 0x0 0x0 0x7>;
+		interrupt-map = <
+			/* IDSEL 0x0 */
+			0000 0x0 0x0 0x1 &mpic 0x0 0x1
+			0000 0x0 0x0 0x2 &mpic 0x1 0x1
+			0000 0x0 0x0 0x3 &mpic 0x2 0x1
+			0000 0x0 0x0 0x4 &mpic 0x3 0x1
+			>;
+
+		pcie@0 {
+			reg = <0x0 0x0 0x0 0x0 0x0>;
+			#size-cells = <2>;
+			#address-cells = <3>;
+			device_type = "pci";
+			ranges = <0x2000000 0x0 0xc0000000
+				  0x2000000 0x0 0xc0000000
+				  0x0 0x20000000
+
+				  0x1000000 0x0 0x0
+				  0x1000000 0x0 0x0
+				  0x0 0x10000>;
+		};
+	};
+};
diff --git a/arch/powerpc/platforms/85xx/quanta_ly2_ly2r.c b/arch/powerpc/platforms/85xx/quanta_ly2_ly2r.c
new file mode 100644
index 0000000..aa24951
--- /dev/null
+++ b/arch/powerpc/platforms/85xx/quanta_ly2_ly2r.c
@@ -0,0 +1,233 @@
+/*
+ * Copyright 2014 Cumulus Networks, Inc.
+ *
+ * LY2 setup and early boot code plus other random bits.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/stddef.h>
+#include <linux/kernel.h>
+#include <linux/pci.h>
+#include <linux/kdev_t.h>
+#include <linux/delay.h>
+#include <linux/seq_file.h>
+#include <linux/interrupt.h>
+#include <linux/of_platform.h>
+#include <linux/i2c.h>
+#include <linux/of_i2c.h>
+#include <linux/early_dma_alloc.h>
+
+#include <asm/system.h>
+#include <asm/time.h>
+#include <asm/machdep.h>
+#include <asm/pci-bridge.h>
+#include <mm/mmu_decl.h>
+#include <asm/prom.h>
+#include <asm/udbg.h>
+#include <asm/mpic.h>
+
+#include <sysdev/fsl_soc.h>
+#include <sysdev/fsl_pci.h>
+
+#undef DEBUG
+
+#ifdef DEBUG
+#define DBG(fmt, args...) printk(KERN_ERR "%s: " fmt, __func__, ## args)
+#else
+#define DBG(fmt, args...)
+#endif
+
+/*******************************************************************************
+ *
+ * Platform initialization functions
+ *
+ *******************************************************************************
+*/
+
+/*
+ * Initialize the interrupt controller
+ */
+static void __init quanta_ly2_ly2r_pic_init(void)
+{
+	struct mpic *mpic;
+	struct resource r;
+	struct device_node *np;
+
+	np = of_find_node_by_type(NULL, "open-pic");
+	if (np == NULL) {
+		printk(KERN_ERR "Could not find open-pic node\n");
+		return;
+	}
+
+	if (of_address_to_resource(np, 0, &r)) {
+		printk(KERN_ERR "Failed to map mpic register space\n");
+		of_node_put(np);
+		return;
+	}
+
+	mpic = mpic_alloc(np, r.start,
+		  MPIC_PRIMARY | MPIC_WANTS_RESET |
+		  MPIC_BIG_ENDIAN | MPIC_BROKEN_FRR_NIRQS |
+		  MPIC_SINGLE_DEST_CPU,
+		  0, 256, " OpenPIC  ");
+
+	BUG_ON(mpic == NULL);
+	of_node_put(np);
+
+	mpic_init(mpic);
+}
+
+/*
+ * Setup the architecture
+ */
+#ifdef CONFIG_SMP
+extern void __init mpc85xx_smp_init(void);
+#endif
+
+static void __init quanta_ly2_ly2r_setup_arch(void)
+{
+	struct device_node *cpu;
+	const unsigned int *fp;
+#ifdef CONFIG_PCI
+	struct device_node *np;
+#endif
+
+	if (ppc_md.progress)
+		ppc_md.progress("quanta_ly2_ly2r_setup_arch()", 0);
+
+        cpu = of_find_node_by_type(NULL, "cpu");
+        if (cpu != 0) {
+	     fp = of_get_property(cpu, "clock-frequency", NULL);
+	     if (fp != 0)
+		  loops_per_jiffy = *fp / HZ;
+	     else
+		  loops_per_jiffy = 500000000 / HZ;
+	     of_node_put(cpu);
+        }
+
+#ifdef CONFIG_PCI
+	for_each_node_by_type(np, "pci") {
+		if (of_device_is_compatible(np, "fsl,mpc8548-pcie"))
+			fsl_add_bridge(np, 0);
+	}
+#endif
+
+#ifdef CONFIG_SMP
+	mpc85xx_smp_init();
+#endif
+
+#ifdef CONFIG_EARLY_DMA_ALLOC
+	eda_init();
+#endif
+
+	printk(KERN_INFO "Quanta LY2 & LY2R from Quanta Computer, Inc.\n");
+}
+
+
+
+static struct of_device_id __initdata quanta_ly2_ly2r_ids[] = {
+	{ .type = "soc", },
+	{ .compatible = "soc", },
+	{ .compatible = "simple-bus", },
+	{ .compatible = "gianfar", },
+	{},
+};
+
+
+
+static int __init quanta_ly2_ly2r_publish_devices(void)
+{
+	return of_platform_bus_probe(NULL, quanta_ly2_ly2r_ids, NULL);
+}
+machine_device_initcall(quanta_ly2, quanta_ly2_ly2r_publish_devices);
+machine_device_initcall(quanta_ly2r, quanta_ly2_ly2r_publish_devices);
+
+static void quanta_ly2_ly2r_show_cpuinfo(struct seq_file *m)
+{
+	uint pvid, svid, phid1;
+	uint memsize = total_memory;
+
+	pvid = mfspr(SPRN_PVR);
+	svid = mfspr(SPRN_SVR);
+
+	seq_printf(m, "Vendor\t\t: Freescale Semiconductor\n");
+	seq_printf(m, "PVR\t\t: 0x%x\n", pvid);
+	seq_printf(m, "SVR\t\t: 0x%x\n", svid);
+
+	/* Display cpu PLL setting */
+	phid1 = mfspr(SPRN_HID1);
+	seq_printf(m, "PLL setting\t: 0x%x\n", ((phid1 >> 24) & 0x3f));
+
+	/* Display the amount of memory */
+	seq_printf(m, "Memory\t\t: %d MB\n", memsize / (1024 * 1024));
+}
+
+
+/*
+ * Called very early, device-tree isn't unflattened
+ */
+static int __init quanta_ly2_probe(void)
+{
+	unsigned long root = of_get_flat_dt_root();
+
+	if (of_flat_dt_is_compatible(root, "quanta,ly2"))
+		return 1;
+
+	return 0;
+}
+
+/*
+ * Called very early, device-tree isn't unflattened
+ */
+static int __init quanta_ly2r_probe(void)
+{
+	unsigned long root = of_get_flat_dt_root();
+
+	if (of_flat_dt_is_compatible(root, "quanta,ly2r"))
+		return 1;
+
+	return 0;
+}
+
+void quanta_ly2_ly2r_restart(char *cmd)
+{
+        // asserts HRESET_REQ which will work on new hardware
+	printk(KERN_INFO "HRESET_REQ\n");
+        fsl_rstcr_restart(cmd);
+}
+
+define_machine(quanta_ly2) {
+	.name		= "Quanta Computer, Inc. LY2",
+	.probe		= quanta_ly2_probe,
+	.setup_arch	= quanta_ly2_ly2r_setup_arch,
+	.init_IRQ	= quanta_ly2_ly2r_pic_init,
+	.show_cpuinfo	= quanta_ly2_ly2r_show_cpuinfo,
+#ifdef CONFIG_PCI
+	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
+#endif
+	.get_irq	= mpic_get_irq,
+	.power_save	= e500_idle,
+	.restart	= quanta_ly2_ly2r_restart,
+	.calibrate_decr = generic_calibrate_decr,
+	.progress	= udbg_progress,
+};
+
+define_machine(quanta_ly2r) {
+	.name		= "Quanta Computer, Inc. LY2R",
+	.probe		= quanta_ly2r_probe,
+	.setup_arch	= quanta_ly2_ly2r_setup_arch,
+	.init_IRQ	= quanta_ly2_ly2r_pic_init,
+	.show_cpuinfo	= quanta_ly2_ly2r_show_cpuinfo,
+#ifdef CONFIG_PCI
+	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
+#endif
+	.get_irq	= mpic_get_irq,
+	.power_save	= e500_idle,
+	.restart	= quanta_ly2_ly2r_restart,
+	.calibrate_decr = generic_calibrate_decr,
+	.progress	= udbg_progress,
+};
