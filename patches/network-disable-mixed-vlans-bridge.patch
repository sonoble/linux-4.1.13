Added a bridge module parameter to allow/disallow mixing vlans in a bridge.

diff --git a/net/bridge/br.c b/net/bridge/br.c
index d3f57c1..b569fdb 100644
--- a/net/bridge/br.c
+++ b/net/bridge/br.c
@@ -27,6 +27,11 @@ int br_hw_fwding_enabled = 1;
 MODULE_PARM_DESC(hw_fwding, "Enable hw forwarding");
 module_param_named(hw_fwding, br_hw_fwding_enabled, int, 0644);
 
+int br_allow_multiple_vlans = 0;
+
+MODULE_PARM_DESC(allow_multiple_vlans, "Allow multiple vlans in a bridge");
+module_param_named(allow_multiple_vlans, br_allow_multiple_vlans, int, 0644);
+
 static const struct stp_proto br_stp_proto = {
 	.rcv	= br_stp_rcv,
 };
diff --git a/net/bridge/br_if.c b/net/bridge/br_if.c
index a73bcd5..bffc49a 100644
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@ -21,11 +21,14 @@
 #include <linux/init.h>
 #include <linux/rtnetlink.h>
 #include <linux/if_ether.h>
+#include <linux/if_vlan.h>
 #include <linux/slab.h>
 #include <net/sock.h>
 
 #include "br_private.h"
 
+extern int br_allow_multiple_vlans;
+
 /*
  * Determine initial path cost based on speed.
  * using recommendations from 802.1d standard
@@ -319,6 +322,26 @@ u32 br_features_recompute(struct net_bridge *br, u32 features)
 	return features;
 }
 
+static bool is_port_in_different_vlan(struct net_bridge *br,
+				      struct net_device *dev)
+{
+	struct net_bridge_port *p;
+	u16 vlan_id;
+
+	if (!is_vlan_dev(dev))
+		return false;
+
+	vlan_id = vlan_dev_vlan_id(dev);
+
+	list_for_each_entry_rcu(p, &br->port_list, list) {
+		if (!is_vlan_dev(p->dev))
+			continue;
+		if (vlan_id != vlan_dev_vlan_id(p->dev))
+			return true;
+	}
+	return false;
+}
+
 /* called with RTNL */
 int br_add_if(struct net_bridge *br, struct net_device *dev)
 {
@@ -344,6 +367,10 @@ int br_add_if(struct net_bridge *br, struct net_device *dev)
 	if (dev->priv_flags & IFF_DONT_BRIDGE)
 		return -EOPNOTSUPP;
 
+	/* No bridgeing vlan devices that have different vlan id */
+	if (!br_allow_multiple_vlans && is_port_in_different_vlan(br, dev))
+		return -EINVAL;
+
 	p = new_nbp(br, dev);
 	if (IS_ERR(p))
 		return PTR_ERR(p);
diff --git a/net/netfilter/xt_SPAN.c b/net/netfilter/xt_SPAN.c
index 751e4ed..1120bb2 100644
--- a/net/netfilter/xt_SPAN.c
+++ b/net/netfilter/xt_SPAN.c
@@ -1,6 +1,6 @@
 /*
  *	"SPAN" target extension for Xtables
- *	Copyright 2013 Cumulus Networks, LLC.  All rights reserved. */
+ *	Copyright 2013 Cumulus Networks, LLC.  All rights reserved.
  *
  *	This program is free software; you can redistribute it and/or
  *	modify it under the terms of the GNU General Public License
