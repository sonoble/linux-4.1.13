Add at24 based EEPROMs to the eeprom_dev hardware class

During device instantiation have the at24 driver add the new device to
the eeprom_dev hardware class.  The functionality is enabled by
CONFIG_EEPROM_CLASS.

diff --git a/drivers/misc/eeprom/at24.c b/drivers/misc/eeprom/at24.c
index 47bcd10..c98c736 100644
--- a/drivers/misc/eeprom/at24.c
+++ b/drivers/misc/eeprom/at24.c
@@ -23,6 +23,7 @@
 #include <linux/of.h>
 #include <linux/i2c.h>
 #include <linux/i2c/at24.h>
+#include <linux/eeprom_class.h>
 
 /*
  * I2C EEPROMs from most vendors are inexpensive and mostly interchangeable.
@@ -68,6 +69,8 @@ struct at24_data {
 	unsigned write_max;
 	unsigned num_addresses;
 
+	struct eeprom_device *eeprom_dev;
+
 	/*
 	 * Some chips tie up multiple I2C addresses; dummy devices reserve
 	 * them for us, and we'll use them with SMBus calls.
@@ -514,6 +517,7 @@ static int at24_probe(struct i2c_client *client, const struct i2c_device_id *id)
 
 		chip.setup = NULL;
 		chip.context = NULL;
+		chip.eeprom_data = NULL;
 	}
 
 	if (!is_power_of_2(chip.byte_len))
@@ -627,6 +631,13 @@ static int at24_probe(struct i2c_client *client, const struct i2c_device_id *id)
 	if (err)
 		goto err_clients;
 
+	at24->eeprom_dev = eeprom_device_register(&client->dev, chip.eeprom_data);
+	if (IS_ERR(at24->eeprom_dev)) {
+		dev_err(&client->dev, "error registering eeprom device.\n");
+		err = PTR_ERR(at24->eeprom_dev);
+		goto err_clients;
+	}
+
 	i2c_set_clientdata(client, at24);
 
 	dev_info(&client->dev, "%zu byte %s EEPROM, %s, %u bytes/write\n",
@@ -669,6 +680,8 @@ static int __devexit at24_remove(struct i2c_client *client)
 	for (i = 1; i < at24->num_addresses; i++)
 		i2c_unregister_device(at24->client[i]);
 
+	eeprom_device_unregister(at24->eeprom_dev);
+
 	kfree(at24->writebuf);
 	kfree(at24);
 	return 0;
diff --git a/include/linux/i2c/at24.h b/include/linux/i2c/at24.h
index 8ace930..a881e5e 100644
--- a/include/linux/i2c/at24.h
+++ b/include/linux/i2c/at24.h
@@ -3,6 +3,7 @@
 
 #include <linux/types.h>
 #include <linux/memory.h>
+#include <linux/eeprom_class.h>
 
 /*
  * As seen through Linux I2C, differences between the most common types of I2C
@@ -27,6 +28,7 @@ struct at24_platform_data {
 
 	void		(*setup)(struct memory_accessor *, void *context);
 	void		*context;
+	struct eeprom_platform_data *eeprom_data; /* extra data for the eeprom_class */
 };
 
 #endif /* _LINUX_AT24_H */
