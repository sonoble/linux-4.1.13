CM-1191: keep bond interface carrier off until bond has atleast one active member.
LACP will still do it's job while bond is carrier off, and if bond members become
active down the road, bond carrier will be turned back on, signaling higher-
level protocols that bond is viable.

This patch is rushed for CL launch release and probably needs to be revisited
for better integration into the LACP state machines implemented in the bonding
driver.  For now, the patch uses number of active slaves to compare against
min_links to know when to on/off bond carrier.  Suggested setting of min_links
is 1, rather than the default of zero.  Using min_links=1 says that atleast 1
slave must be active within bond for bond to be carrier on.

diff --git a/drivers/net/bonding/bond_3ad.c b/drivers/net/bonding/bond_3ad.c
index c7e3e53..082a399 100644
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@ -224,6 +224,7 @@ static inline int __agg_has_partner(struct aggregator *agg)
 static inline void __disable_port(struct port *port)
 {
 	bond_set_slave_inactive_flags(port->slave);
+	bond_3ad_set_carrier(port->slave->bond);
 }
 
 /**
@@ -235,8 +236,10 @@ static inline void __enable_port(struct port *port)
 {
 	struct slave *slave = port->slave;
 
-	if ((slave->link == BOND_LINK_UP) && IS_UP(slave->dev))
+	if ((slave->link == BOND_LINK_UP) && IS_UP(slave->dev)) {
 		bond_set_slave_active_flags(slave);
+		bond_3ad_set_carrier(slave->bond);
+	}
 }
 
 /**
@@ -2331,11 +2334,17 @@ void bond_3ad_handle_link_change(struct slave *slave, char link)
 int bond_3ad_set_carrier(struct bonding *bond)
 {
 	struct aggregator *active;
+	struct slave *slave;
+	int active_slaves = 0, i;
+
+	bond_for_each_slave(bond, slave, i)
+		if (bond_is_active_slave(slave))
+			active_slaves++;
 
 	active = __get_active_agg(&(SLAVE_AD_INFO(bond->first_slave).aggregator));
-	if (active) {
+	if (active && __agg_has_partner(active)) {
 		/* are enough slaves available to consider link up? */
-		if (active->num_of_ports < bond->params.min_links) {
+		if (active_slaves < bond->params.min_links) {
 			if (netif_carrier_ok(bond->dev)) {
 				netif_carrier_off(bond->dev);
 				return 1;
