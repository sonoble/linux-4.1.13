There are a few cases where igmp snoooping config cannot be configured, when the bridge device is not running. Due to this at bootup time, configuration from ifupdown fails.

diff --git a/net/bridge/br_multicast.c b/net/bridge/br_multicast.c
index 7870449..e962ce3 100644
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@ -1711,9 +1711,6 @@ int br_multicast_set_router(struct net_bridge *br, unsigned long val)
 	int err = -ENOENT;
 
 	spin_lock_bh(&br->multicast_lock);
-	if (!netif_running(br->dev))
-		goto unlock;
-
 	switch (val) {
 	case 0:
 	case 2:
@@ -1741,8 +1738,6 @@ int br_multicast_set_port_router(struct net_bridge_port *p, unsigned long val)
 	int err = -ENOENT;
 
 	spin_lock(&br->multicast_lock);
-	if (!netif_running(br->dev) || p->state == BR_STATE_DISABLED)
-		goto unlock;
 
 	switch (val) {
 	case 0:
@@ -1857,9 +1852,6 @@ int br_multicast_set_hash_max(struct net_bridge *br, unsigned long val)
 	struct net_bridge_mdb_htable *mdb;
 
 	spin_lock_bh(&br->multicast_lock);
-	if (!netif_running(br->dev))
-		goto unlock;
-
 	err = -EINVAL;
 	if (!is_power_of_2(val))
 		goto unlock;
diff --git a/net/bridge/br_sysfs_if.c b/net/bridge/br_sysfs_if.c
index 94e63ff..9f1ee9a 100644
--- a/net/bridge/br_sysfs_if.c
+++ b/net/bridge/br_sysfs_if.c
@@ -172,9 +172,6 @@ static ssize_t show_multicast_fast_leave(struct net_bridge_port *p,
 static int store_multicast_fast_leave(struct net_bridge_port *p,
 									unsigned long v)
 {
-	if (p->br->multicast_disabled)
-		return -EINVAL;
-
 	p->multicast_fast_leave = !!v;
 	return 0;
 }
