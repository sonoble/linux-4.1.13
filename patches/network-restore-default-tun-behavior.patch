Retore default behavior for tuntap.  This change requires that switchd
also know to set IFF_TUN_SET_CARRIER so it behaves properly.

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 078c36c..05ff14d 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -176,6 +176,8 @@ static int tun_attach(struct tun_struct *tun, struct file *file)
 	tfile->tun = tun;
 	tun->tfile = tfile;
 	tun->socket.file = file;
+	if (!(tun->flags & TUN_SET_CARRIER))
+		netif_carrier_on(tun->dev);
 	dev_hold(tun->dev);
 	sock_hold(tun->socket.sk);
 	atomic_inc(&tfile->count);
@@ -189,6 +191,8 @@ static void __tun_detach(struct tun_struct *tun)
 {
 	/* Detach from net device */
 	netif_tx_lock_bh(tun->dev);
+	if (!(tun->flags & TUN_SET_CARRIER))
+		netif_carrier_off(tun->dev);
 	tun->tfile = NULL;
 	tun->socket.file = NULL;
 	netif_tx_unlock_bh(tun->dev);
@@ -1208,7 +1212,8 @@ static int tun_set_iff(struct net *net, struct file *file, struct ifreq *ifr)
 		if (err < 0)
 			goto failed;
 
-		netif_carrier_off(tun->dev);
+		if (tun->flags & TUN_SET_CARRIER)
+			netif_carrier_off(tun->dev);
 	}
 
 	tun_debug(KERN_INFO, tun, "tun_set_iff\n");
@@ -1228,6 +1233,11 @@ static int tun_set_iff(struct net *net, struct file *file, struct ifreq *ifr)
 	else
 		tun->flags &= ~TUN_VNET_HDR;
 
+	if (ifr->ifr_flags & IFF_TUN_SET_CARRIER)
+		tun->flags |= TUN_SET_CARRIER;
+	else
+		tun->flags &= ~TUN_SET_CARRIER;
+
 	/* Make sure persistent devices do not get stuck in
 	 * xoff state.
 	 */
diff --git a/include/linux/if_tun.h b/include/linux/if_tun.h
index 06b1829..3da0107 100644
--- a/include/linux/if_tun.h
+++ b/include/linux/if_tun.h
@@ -34,6 +34,7 @@
 #define TUN_ONE_QUEUE	0x0080
 #define TUN_PERSIST 	0x0100	
 #define TUN_VNET_HDR 	0x0200
+#define TUN_SET_CARRIER	0x0400
 
 /* Ioctl defines */
 #define TUNSETNOCSUM  _IOW('T', 200, int) 
@@ -55,12 +56,13 @@
 #define TUNSETVNETHDRSZ _IOW('T', 216, int)
 
 /* TUNSETIFF ifr flags */
-#define IFF_TUN		0x0001
-#define IFF_TAP		0x0002
-#define IFF_NO_PI	0x1000
-#define IFF_ONE_QUEUE	0x2000
-#define IFF_VNET_HDR	0x4000
-#define IFF_TUN_EXCL	0x8000
+#define IFF_TUN			0x0001
+#define IFF_TAP			0x0002
+#define IFF_NO_PI		0x1000
+#define IFF_ONE_QUEUE		0x2000
+#define IFF_VNET_HDR		0x4000
+#define IFF_TUN_EXCL		0x8000
+#define IFF_TUN_SET_CARRIER	0x0008
 
 /* Features for GSO (TUNSETOFFLOAD). */
 #define TUN_F_CSUM	0x01	/* You can hand me unchecksummed packets. */
