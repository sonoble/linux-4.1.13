(picked up from upstream: https://marc.info/?l=linux-netdev&m=140447512108548&w=2)

[net-next-2.6 PATCH v6 1/2] bridge: fdb dumping takes a filter device

Dumping a bridge fdb dumps every fdb entry
held. With this change we are going to filter
on selected bridge port.

Signed-off-by: Jamal Hadi Salim <jhs@mojatatu.com>>

diff --git a/drivers/net/vxlan.c b/drivers/net/vxlan.c
index 5c51530..2fdd4e8 100644
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@ -402,7 +402,7 @@ static int vxlan_fdb_delete(struct ndmsg *ndm, struct nlattr *tb[],
 
 /* Dump forwarding table */
 static int vxlan_fdb_dump(struct sk_buff *skb, struct netlink_callback *cb,
-			  struct net_device *dev, int idx)
+			  struct net_device *dev, struct net_device *filter_dev, int idx)
 {
 	struct vxlan_dev *vxlan = netdev_priv(dev);
 	unsigned int h;
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index c1f6a6e..ec21a37 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -990,6 +990,7 @@ struct net_device_ops {
 	int                     (*ndo_fdb_dump)(struct sk_buff *skb,
 					        struct netlink_callback *cb,
 					        struct net_device *dev,
+						struct net_device *filter_dev,
 					        int idx);
 	int                     (*ndo_bridge_setlink)(struct net_device *dev,
 						      struct nlmsghdr *nlh);
diff --git a/net/bridge/br_fdb.c b/net/bridge/br_fdb.c
index eb16520..961fbfd 100644
--- a/net/bridge/br_fdb.c
+++ b/net/bridge/br_fdb.c
@@ -629,6 +629,7 @@ errout:
 int br_fdb_dump(struct sk_buff *skb,
 		struct netlink_callback *cb,
 		struct net_device *dev,
+		struct net_device *filter_dev,
 		int idx)
 {
 	struct net_bridge *br = netdev_priv(dev);
@@ -645,6 +646,10 @@ int br_fdb_dump(struct sk_buff *skb,
 			if (idx < cb->args[0])
 				goto skip;
 
+			if (filter_dev && (!f->dst || !f->dst->dev ||
+					f->dst->dev != filter_dev))
+				goto skip;
+
 			if (fdb_fill_info(skb, br, f,
 					  NETLINK_CB(cb->skb).pid,
 					  cb->nlh->nlmsg_seq,
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index cc204a1..7ae7eeb 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -404,7 +404,7 @@ int br_fdb_delete(struct ndmsg *ndm, struct nlattr *tb[],
 int br_fdb_add(struct ndmsg *nlh, struct nlattr *tb[], struct net_device *dev,
 	       const unsigned char *addr, u16 nlh_flags);
 int br_fdb_dump(struct sk_buff *skb, struct netlink_callback *cb,
-		struct net_device *dev, int idx);
+		struct net_device *dev, struct net_device *fdev, int idx);
 
 /* br_forward.c */
 void br_deliver(const struct net_bridge_port *to, struct sk_buff *skb);
diff --git a/net/core/rtnetlink.c b/net/core/rtnetlink.c
index 4f3d832..b52d6e2 100644
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@ -2263,11 +2263,13 @@ static int rtnl_fdb_dump(struct sk_buff *skb, struct netlink_callback *cb)
                         const struct net_device_ops *ops = master->netdev_ops;
 
                         if (ops->ndo_fdb_dump)
-                                idx = ops->ndo_fdb_dump(skb, cb, dev, idx);
+                                idx = ops->ndo_fdb_dump(skb, cb, dev, NULL,
+                                            idx);
                 }
 
                 if (dev->netdev_ops->ndo_fdb_dump)
-                        idx = dev->netdev_ops->ndo_fdb_dump(skb, cb, dev, idx);
+                        idx = dev->netdev_ops->ndo_fdb_dump(skb, cb, dev, NULL,
+                                            idx);
         }
         rcu_read_unlock();
 
