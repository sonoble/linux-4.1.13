Advertise speed/duplex for 802.3ad mode.  Basically add up all the active slave speeds,
and report duplex as FULL.

diff --git a/drivers/net/bonding/bond_3ad.c b/drivers/net/bonding/bond_3ad.c
index aaa7999..c7e3e53 100644
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@ -2354,15 +2354,7 @@ int bond_3ad_set_carrier(struct bonding *bond)
 	return 0;
 }
 
-/**
- * bond_3ad_get_active_agg_info - get information of the active aggregator
- * @bond: bonding struct to work on
- * @ad_info: ad_info struct to fill with the bond's info
- *
- * Returns:   0 on success
- *          < 0 on error
- */
-int bond_3ad_get_active_agg_info(struct bonding *bond, struct ad_info *ad_info)
+struct aggregator * bond_3ad_get_active_agg(struct bonding *bond)
 {
 	struct aggregator *aggregator = NULL;
 	struct port *port;
@@ -2374,6 +2366,21 @@ int bond_3ad_get_active_agg_info(struct bonding *bond, struct ad_info *ad_info)
 		}
 	}
 
+	return aggregator;
+}
+
+/**
+ * bond_3ad_get_active_agg_info - get information of the active aggregator
+ * @bond: bonding struct to work on
+ * @ad_info: ad_info struct to fill with the bond's info
+ *
+ * Returns:   0 on success
+ *          < 0 on error
+ */
+int bond_3ad_get_active_agg_info(struct bonding *bond, struct ad_info *ad_info)
+{
+	struct aggregator *aggregator = bond_3ad_get_active_agg(bond);
+
 	if (aggregator) {
 		ad_info->aggregator_id = aggregator->aggregator_identifier;
 		ad_info->ports = aggregator->num_of_ports;
diff --git a/drivers/net/bonding/bond_3ad.h b/drivers/net/bonding/bond_3ad.h
index 20d9c78..046bb1f 100644
--- a/drivers/net/bonding/bond_3ad.h
+++ b/drivers/net/bonding/bond_3ad.h
@@ -273,6 +273,7 @@ void bond_3ad_initiate_agg_selection(struct bonding *bond, int timeout);
 void bond_3ad_adapter_speed_changed(struct slave *slave);
 void bond_3ad_adapter_duplex_changed(struct slave *slave);
 void bond_3ad_handle_link_change(struct slave *slave, char link);
+struct aggregator *bond_3ad_get_active_agg(struct bonding *bond);
 int  bond_3ad_get_active_agg_info(struct bonding *bond, struct ad_info *ad_info);
 int bond_3ad_xmit_xor(struct sk_buff *skb, struct net_device *dev);
 void bond_3ad_lacpdu_recv(struct sk_buff *skb, struct bonding *bond,
diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c
index 173cdbc..a986b86 100644
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@ -2583,6 +2583,7 @@ static int bond_miimon_inspect(struct bonding *bond)
 static void bond_miimon_commit(struct bonding *bond)
 {
 	struct slave *slave;
+	struct ethtool_cmd ecmd;
 	int i;
 
 	bond_for_each_slave(bond, slave, i) {
@@ -2605,9 +2606,11 @@ static void bond_miimon_commit(struct bonding *bond)
 				bond_set_backup_slave(slave);
 			}
 
+			__ethtool_get_settings(slave->dev, &ecmd);
 			pr_info("%s: link status definitely up for interface %s, %u Mbps %s duplex.\n",
 				bond->dev->name, slave->dev->name,
-				slave->speed, slave->duplex ? "full" : "half");
+				ethtool_cmd_speed(&ecmd),
+				ecmd.duplex == DUPLEX_FULL ? "full" : "half");
 
 			/* notify ad that the link status has changed */
 			if (bond->params.mode == BOND_MODE_8023AD)
@@ -4414,6 +4417,36 @@ void bond_set_mode_ops(struct bonding *bond, int mode)
 	}
 }
 
+static int bond_get_settings(struct net_device *dev,
+	struct ethtool_cmd *ecmd)
+{
+	struct bonding *bond = netdev_priv(dev);
+	u32 speed_mbps = SPEED_UNKNOWN;
+
+	if (bond->params.mode != BOND_MODE_8023AD)
+		return -EOPNOTSUPP;
+
+	if (bond->first_slave)
+		speed_mbps = bond->first_slave->speed;
+
+	switch(speed_mbps) {
+	case SPEED_10:
+	case SPEED_100:
+	case SPEED_1000:
+	case SPEED_10000:
+		speed_mbps = speed_mbps * bond->slave_cnt;
+		break;
+	default:
+		speed_mbps = SPEED_UNKNOWN;
+		break;
+	}
+
+	ethtool_cmd_speed_set(ecmd, speed_mbps);
+	ecmd->duplex = DUPLEX_FULL;
+
+	return 0;
+}
+
 static void bond_ethtool_get_drvinfo(struct net_device *bond_dev,
 				    struct ethtool_drvinfo *drvinfo)
 {
@@ -4423,6 +4456,7 @@ static void bond_ethtool_get_drvinfo(struct net_device *bond_dev,
 }
 
 static const struct ethtool_ops bond_ethtool_ops = {
+	.get_settings		= bond_get_settings,
 	.get_drvinfo		= bond_ethtool_get_drvinfo,
 	.get_link		= ethtool_op_get_link,
 };
diff --git a/drivers/net/bonding/bond_sysfs.c b/drivers/net/bonding/bond_sysfs.c
index e894f2d..67f9073 100644
--- a/drivers/net/bonding/bond_sysfs.c
+++ b/drivers/net/bonding/bond_sysfs.c
@@ -1431,8 +1431,8 @@ static DEVICE_ATTR(ad_partner_mac, S_IRUGO, bonding_show_ad_partner_mac, NULL);
  * Show the current 802.3ad active slaves.
  */
 static ssize_t bonding_show_ad_active_slaves(struct device *d,
-                                    struct device_attribute *attr,
-                                    char *buf)
+					     struct device_attribute *attr,
+					     char *buf)
 {
 	struct slave *slave;
 	int i, count = 0;
