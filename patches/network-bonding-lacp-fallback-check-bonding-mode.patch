Checkout bonding mode before allowing the fallback parameters to be set.

diff --git a/drivers/net/bonding/bond_sysfs.c b/drivers/net/bonding/bond_sysfs.c
index 6103587..4abf593 100644
--- a/drivers/net/bonding/bond_sysfs.c
+++ b/drivers/net/bonding/bond_sysfs.c
@@ -1001,6 +1001,13 @@ static ssize_t bonding_store_lacp_fallback_allow(struct device *d,
 	int ret;
 	unsigned int new_value;
 
+	if (bond->params.mode != BOND_MODE_8023AD) {
+		pr_err("%s: Unable to update lacp_fallback_allow because bond is not "
+			   "in 802.3ad mode.\n", bond->dev->name);
+		ret = -EPERM;
+		return ret;
+	}
+
 	ret = kstrtouint(buf, 0, &new_value);
 	if (ret < 0) {
                 pr_err("%s: Ignoring invalid lacp_fallback_allow value %s.\n",
@@ -1037,6 +1044,13 @@ static ssize_t bonding_store_lacp_fallback_period(struct device *d,
 	int ret;
 	unsigned int new_value;
 
+	if (bond->params.mode != BOND_MODE_8023AD) {
+		pr_err("%s: Unable to update lacp_fallback_period because bond is not "
+			   "in 802.3ad mode.\n", bond->dev->name);
+		ret = -EPERM;
+		return ret;
+	}
+
 	ret = kstrtouint(buf, 0, &new_value);
 	if (ret < 0) {
 		pr_err("%s: Ignoring invalid lacp_fallback_period value %s.\n",
@@ -1074,6 +1088,13 @@ static ssize_t bonding_store_lacp_fallback_active(struct device *d,
 	int ret;
 	unsigned int new_value;
 
+	if (bond->params.mode != BOND_MODE_8023AD) {
+		pr_err("%s: Unable to update lacp_fallback_active because bond is not "
+			   "in 802.3ad mode.\n", bond->dev->name);
+		ret = -EPERM;
+		return ret;
+	}
+
 	ret = kstrtouint(buf, 0, &new_value);
 	if (ret < 0) {
 		pr_err("%s: Ignoring invalid lacp_fallback_active value %s.\n",
